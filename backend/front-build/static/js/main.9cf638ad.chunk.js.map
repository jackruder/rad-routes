{"version":3,"sources":["util.js","components/Card/ClimbCard.js","components/Home.js","components/SignUp.js","components/Login.js","components/editPortals/selectors/BookSelector.js","components/editPortals/selectors/AreaSelector.js","components/editPortals/selectors/FeatureSelector.js","components/editPortals/selectors/FaceSelector.js","components/editPortals/EditClimb.js","components/editPortals/EditArea.js","components/editPortals/EditFeature.js","components/editPortals/EditFace.js","components/editPortals/EditBook.js","components/EditPortal.js","components/RadNavbar.js","components/Layout.js","components/NotFound.js","components/Card/BookCard.js","components/List/BookList.js","components/Card/AreaCard.js","components/List/AreaList.js","components/Card/FeatureCard.js","components/List/FeatureList.js","components/Card/FaceCard.js","components/List/FaceList.js","components/List/ClimbList.js","components/Page/BookPage.js","components/Page/AreaPage.js","components/Page/FeaturePage.js","components/Page/FacePage.js","App.js","index.js"],"names":["getAuth","Object","keys","localStorage","indexOf","auth_token","sessionStorage","apiUrlBase","window","location","host","formFieldErrorRed","fetchFromApi","path","setter","_path","substring","token","headers","fetch","method","then","res","json","data","console","log","catch","e","getHeightString","height","ft","Math","round","m","navigator","language","toLowerCase","images","Climb","onPage","deleteThis","loggedIn","climbObj","navigate","useNavigate","length","Card","style","width","margin","display","Body","minWidth","lineHeight","Title","climb_name","climb_type","grade","flexGrow","Link","onClick","face","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","marginTop","Text","description","Button","variant","Swal","fire","icon","title","showCancelButton","focusCancel","confirmButtonText","confirmButtonColor","result","isConfirmed","climb_id","ok","Error","text","Home","useState","climbs","setClimbs","justifyContent","alignItems","id","textAlign","fontSize","animation","minHeight","placeItems","position","floor","random","color","defaultFormData","username","first_name","last_name","email","password","is_guide","info_private","SignUp","setLoggedIn","formData","setFormData","setUsername","setPassword","passConfirm","setPassConfirm","showPassword","setShowPassword","usernameError","setUsernameError","emailError","setEmailError","passwordError","setPasswordError","firstNameError","setFirstNameError","lastNameError","setLastNameError","errorSetters","top","Form","Group","className","controlId","Label","Control","type","placeholder","onInput","target","value","newData","marginBottom","size","Check","label","checked","disabled","preventDefault","body","JSON","stringify","err","key","prototype","toString","call","setItem","removeItem","alert","Login","formDisabled","setFormDisabled","stayLoggedIn","setStayLoggedIn","invalidLogin","setInvalidLogin","Storage","BookSelector","onChange","editableBooks","setEditableAreas","Select","selectorStyle","selectorSize","book","defaultValue","map","i","book_id","book_name","AreaSelector","editableAreas","setEditableFeatures","area","area_id","area_name","FeatureSelector","editableFeatures","setEditableFaces","feature","feature_id","feature_name","FaceSelector","editableFaces","face_id","face_name","EditClimb","setEditableBooks","useEffect","Container","Number","isInteger","parseInt","meters","as","rows","contentType","get","detail","area_description","EditArea","nameBg","setNameBg","background","feature_description","gps","EditFeature","EditFace","face_description","book_description","public","listed","grade_hist","EditBook","marginLeft","EditPortal","selectedForm","setForm","renderForm","RadNavbar","Navbar","bg","expand","sticky","maxWidth","fluid","Brand","cursor","Toggle","Collapse","Nav","NavDropdown","menuVariant","item","reload","Layout","children","flexDirection","NotFound","defaultAuthorObj","Book","bookObj","authorObj","setAuthorObj","author","quality_max","stopPropagation","input","inputAttributes","autocapitalize","BookList","bookList","setBookList","Row","xs","md","lg","idx","Col","newList","slice","splice","AreaCard","areaObj","area_quality","AreaList","bookId","areaList","setAreaList","useParams","Feature","featureObj","areaId","featureList","setFeatureList","faceObj","featureId","faceList","setFaceList","ClimbList","faceId","climbList","setClimbList","climb","defaultBookObj","BookPage","setBookObj","author_id","fetchAuthor","defaultAreaObj","setAreaObj","to","defaultFeatureObj","setFeatureObj","defaultFaceObj","setFaceObj","App","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cf638ad.chunk.js","sourcesContent":["export const getAuth = () => {\n    if(Object.keys(localStorage).indexOf(\"auth_token\") >= 0){\n        return localStorage.auth_token;\n    }\n    if(Object.keys(sessionStorage).indexOf(\"auth_token\") >= 0){\n        return sessionStorage.auth_token;\n    }\n    return null;\n}\n\nexport const apiUrlBase = process.env.NODE_ENV === 'production' ? `http://${window.location.host}/api` : 'http://localhost:8000/api';\n\nexport const formFieldErrorRed = \"#f99\";\n\nexport const fetchFromApi = (path, setter) => {\n    const _path = path[0] === \"/\" ? path.substring(1) : path; \n\n    const token = getAuth();\n    const headers = token ? {\n        \"Authorization\": `Token ${token}`\n    } : {};\n    \n    fetch(`${apiUrlBase}/${_path}`, {\n        method: 'GET',\n        headers: headers\n    })\n    .then(res => res.json())\n    .then(data => {\n        setter(data)\n        console.log(\"received data:\", data);\n    })\n    .catch(e => console.log(e));\n}","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Swal from 'sweetalert2';\n\nimport { getAuth, apiUrlBase } from '../../util';\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nconst getHeightString = (height) => {\n  const ft = `${Math.round(height * 3.28084)}ft`;\n  const m = `${height}m`\n  if(navigator.language.toLowerCase() === 'en-us'){\n    return `${ft} (${m})`\n  }\n  else{\n    return `${m} (${ft})`\n  }\n}\n\nconst images = {\n  \"Cartilage\": \"/static/assets/cartilage.png\",\n  \"Jagged Jaw\": \"/static/assets/jagged.jpg\",\n  \"In-N-Out\": \"/static/assets/in-n-out.png\"\n}\n\nexport default function Climb({ data, onPage, deleteThis, loggedIn }) {\n  const climbObj = data;\n  const navigate = useNavigate();\n\n  return (\n    Object.keys(climbObj).length > 1 ?\n    <Card\n      style={{ width: '36rem', margin: 10 }}\n    >\n      <div style={{display: 'flex'}}>\n        <Card.Body style={{ minWidth: '60%', lineHeight: '2rem'}}>\n          <Card.Title>{climbObj.climb_name}</Card.Title>\n          Type: <b>{climbObj.climb_type}</b> <br/>\n          Grade: <b>{climbObj.grade}</b> <br/>\n\n          <div style={{flexGrow: 1}}>Height: <b>{getHeightString(climbObj.height)}</b></div>\n\n          {!onPage ? \n            <>\n              <Card.Link onClick={() => navigate(`/faces/${climbObj.face}`)}>Face</Card.Link><br/>\n            </>\n            : <></>}\n        </Card.Body>\n        <div style={{\n          width: '100%',\n          backgroundImage: `url(${images[climbObj.climb_name]})`,\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center'\n        }}/>\n      </div>\n      <Card.Body>\n          <Card.Title style={{ marginTop: '1rem' }}>Description</Card.Title>\n          <Card.Text> {climbObj.description} </Card.Text>\n          { typeof deleteThis === 'function' && loggedIn ?\n          <Button variant=\"danger\"\n            onClick={() => {\n              Swal.fire({\n                icon: 'warning',\n                title: `Are you sure you want to delete \"${climbObj.climb_name}\"?`,\n                showCancelButton: true,\n                focusCancel: true,\n                confirmButtonText: `Delete ${climbObj.climb_name}`,\n                confirmButtonColor: '#f33'\n              }).then(result => {\n                if(result.isConfirmed){\n                  console.log(climbObj);\n    \n                  const token = getAuth();\n                  const headers = token ? {\n                      \"Authorization\": `Token ${token}`\n                  } : {};\n    \n                  fetch(`${apiUrlBase}/climbs/${climbObj.climb_id}`, {\n                    method: 'DELETE',\n                    headers: headers\n                  })\n                  .then(res => {\n                    if(res.ok){\n                      console.log(res.text, climbObj);\n        \n                      try{\n                        Swal.fire({\n                          icon: 'success',\n                          text: `successfully deleted ${climbObj.climb_name}`\n                        });\n                      }\n                      catch(e){\n                        console.log(e);\n                      }\n        \n                      deleteThis();\n                    }\n                    else{\n                      throw Error(\"Could not delete this climb. Are you sure you own it?\");\n                    }\n                  })\n                  .catch(e => {\n                    Swal.fire({\n                      icon: 'error',\n                      text: e\n                    })\n                  })\n                }\n              });\n            }}\n          >\n            Delete\n          </Button>\n          : <></>}\n      </Card.Body>\n    </Card> : <>This Climb Does Not Exist</>\n  )\n}","import React, { useState } from 'react';\n\nimport Button from 'react-bootstrap/Button';\n\nimport { fetchFromApi } from '../util';\n\nimport ClimbCard from './Card/ClimbCard';\n\nexport default function Home({ loggedIn }) {\n    const [climbs, setClimbs] = useState(null);\n\n    return (\n        <div style={{\n            display: 'flex',\n            height: '100%',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundImage: \"url(/static/assets/banner-1.jpg)\",\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center'\n        }}>\n            <div style={{ display: 'flex' }}>\n                <div id=\"title\" style={{\n                    textAlign: 'center'\n                }}>\n                    <h1 style={{\n                        fontSize: 72,\n                        animation: '1s ease-out 0s 1 fadeIn'\n                    }}>\n                        \"Rad Route, Dude\"\n                    </h1>\n                    <br/>\n                    <Button\n                        variant=\"dark\"\n                        style={{\n                            animation: '1s ease-out 0s 1 fadeIn'\n                        }}\n                        onClick={() => {\n                            fetchFromApi(\"/climbs\", setClimbs);\n                        }}\n                    >\n                        Random Climb\n                    </Button>\n                </div>\n                <div style={{ minWidth: '40vw', minHeight: '100%', display: 'grid', placeItems: 'center' }}>\n                    <div style={{position: 'absolute'}}>\n                        { climbs !== null ? <>\n                            { climbs.length > 0 ?\n                                <ClimbCard data={climbs[Math.floor(Math.random() * climbs.length)]}/>\n                            : \n                                <div style={{ color: '#fdd' }}>\n                                    {loggedIn ? \"No climbs available :(\" : \"Log in to see available climbs!\"} \n                                </div>\n                            }\n                        </> \n                        :\n                        <></> }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Swal from 'sweetalert2';\n\nimport { apiUrlBase } from '../util';\n\nconst defaultFormData = {\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    is_guide: false,\n    info_private: false\n}\n\nexport default function SignUp({ setLoggedIn }){\n    const [formData, setFormData] = useState(defaultFormData);\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passConfirm, setPassConfirm] = useState(\"\");\n\n    const [showPassword, setShowPassword] = useState(false);\n\n    const [usernameError, setUsernameError] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [firstNameError, setFirstNameError] = useState(\"\");\n    const [lastNameError, setLastNameError] = useState(\"\");\n\n    const navigate = useNavigate();\n\n    const errorSetters = {\n        username: setUsernameError,\n        email: setEmailError,\n        password: setPasswordError,\n        first_name: setFirstNameError,\n        last_name: setLastNameError\n    }\n\n    const formIsDisabled = () => {\n        console.log(\"hello\");\n        return password === \"\" || formData.username === \"\" || formData.email === \"\" || passwordError !== \"\";\n    }\n\n    return(\n        <Card style = {{ margin: 'auto', top: '50px', width: '380px' }}\n            onClick={() => {\n                \n            }}\n        >\n            <div style = {{ display: 'flex' }}>\n            <Card.Body>\n                <Card.Title>Sign Up</Card.Title>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"first_name\">\n                        <Form.Label>Username*</Form.Label>\n                        {usernameError !== \"\" ?\n                        <> <br/>\n                        <Form.Text style={{color: \"#f00\"}}>\n                            {usernameError}\n                        </Form.Text> </>\n                        : <></>}\n                        <Form.Control type=\"text\" placeholder=\"johnsmith42\"\n                            onInput={e => {\n                                setUsername(e.target.value);\n\n                                let newData = formData;\n                                newData.username = e.target.value;\n                                setFormData(newData);\n                            }}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"first_name\">\n                        <Form.Label>First Name</Form.Label>\n                        {firstNameError !== \"\" ?\n                        <> <br/>\n                        <Form.Text style={{color: \"#f00\"}}>\n                            {firstNameError}\n                        </Form.Text> </>\n                        : <></>}\n                        <Form.Control type=\"text\" placeholder=\"John\"\n                            onInput={e => {\n\n                                let newData = formData;\n                                newData.first_name = e.target.value;\n                                setFormData(newData);\n                            }}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"last_name\">\n                        <Form.Label>Last Name</Form.Label>\n                        {lastNameError !== \"\" ?\n                        <> <br/>\n                        <Form.Text style={{color: \"#f00\"}}>\n                            {lastNameError}\n                        </Form.Text> </>\n                        : <></>}\n                        <Form.Control type=\"text\" placeholder=\"Smith\"\n                            onInput={e => {\n                                let newData = formData;\n                                newData.last_name = e.target.value;\n                                setFormData(newData);\n                            }}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\n                        <Form.Label>Email address*</Form.Label>\n                        {emailError !== \"\" ? <><br/>\n                        <Form.Text style={{color: \"#f00\"}}>\n                            {emailError}\n                        </Form.Text></>\n                        : <></>}\n                        <Form.Control type=\"text\" placeholder=\"jsmith@example.com\" \n                            onInput={e => {\n                                let newData = formData;\n                                newData.email = e.target.value;\n                                setFormData(newData);\n                            }}\n                        />\n                        <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"password\">\n                        <Form.Label>Password*</Form.Label>\n                        {passwordError !== \"\" ? <><br/>\n                        <Form.Text style={{color: \"#f00\"}}>\n                            {passwordError}\n                        </Form.Text></>\n                        : <></>}\n                        <Form.Control\n                            type={showPassword ? \"text\" : \"password\"}\n                            placeholder=\"Enter password\"\n                            style={{ marginBottom: '5px' }}\n                            onInput={e => {\n                                setPassword(e.target.value);\n                                if(e.target.value === passConfirm){\n                                    setPasswordError(\"\");\n\n                                    let newData = formData;\n                                    newData.password = password;\n                                    setFormData(newData);\n                                }\n                                else{\n                                    setPasswordError(\"Passwords do not match\");\n                                }\n                            }}\n                        />\n                        <Form.Control\n                            style={{ marginBottom: '5px'}}\n                            type={showPassword ? \"text\" : \"password\"}\n                            placeholder=\"Confirm password\"\n                            onInput={e => {\n                                setPassConfirm(e.target.value);\n                                if(e.target.value === password){\n                                    setPasswordError(\"\");\n\n                                    let newData = formData;\n                                    newData.password = password;\n                                    setFormData(newData);\n                                }\n                                else{\n                                    setPasswordError(\"Passwords do not match\");\n                                }\n                            }}\n                        />\n                        <Button variant=\"light\" size=\"sm\"\n                            onClick={() => {\n                                setShowPassword(!showPassword);\n                            }}\n                        >\n                            {showPassword ? \"Hide Password\" : \"Show Password\"}\n                        </Button>\n                    </Form.Group>\n\n                    <Form.Check \n                        type={'checkbox'}\n                        id={`is_guide`}\n                        label={`I am a guide.`}\n                        onInput={e => {\n                            let newData = formData;\n                            newData.is_guide = e.target.checked;\n                            setFormData(newData);\n                        }}\n                    />\n\n                    <Form.Check\n                        type={'checkbox'}\n                        id={`info_private`}\n                        label={`Keep my info private`}\n                        onInput={e => {\n                            let newData = formData;\n                            newData.info_private = e.target.checked;\n                            setFormData(newData);\n                        }}\n                    />\n                    <br />\n\n                    <Button\n                        variant=\"primary\"\n                        type=\"submit\"\n                        disabled={formIsDisabled()}\n                        onClick={e => {\n                            e.preventDefault();\n\n                            fetch(`${apiUrlBase}/users/`, {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json'\n                                },\n                                body: JSON.stringify(formData)\n                            })\n                            .then(res => res.json())\n                            .then(data => {\n                                console.log(data);\n                                let err = false;\n                                for(let key of Object.keys(formData)){\n                                    if(Object.keys(data).indexOf(key) >= 0){\n                                        if(Object.prototype.toString.call(data[key]) === \"[object Array]\"){\n                                            err = true;\n                                            errorSetters[key](data[key][0]);\n                                        }\n                                    }\n                                    else if (Object.keys(errorSetters).indexOf(key) >= 0){\n                                        errorSetters[key](\"\");\n                                    }\n                                }\n                                if(!err){\n                                    for(let key of Object.keys(errorSetters)){\n                                        errorSetters[key](false);\n                                    }\n\n                                    //BEGIN LOGIN\n                                    console.log(\"fetching authorization\");\n                                    fetch(`${apiUrlBase}/authorization/`, {\n                                        method: 'POST',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                        },\n                                        body: JSON.stringify({ username, password })\n                                    })\n                                    .then(res => res.json())\n                                    .then(data => {\n\n                                        try{\n                                            sessionStorage.setItem(\"auth_token\", data.token);\n                                            localStorage.removeItem(\"auth_token\");\n                                            localStorage.setItem(\"username\", username);\n\n                                            setLoggedIn(true);\n\n                                            Swal.fire({\n                                                icon: 'success',\n                                                title: 'Account Created',\n                                                text: `Welcome to Rad Routes, ${formData.first_name} 🧗`\n                                            }).then(navigate(\"/books\"));\n\n                                        }\n                                        catch(e){\n                                            console.log(e);\n                                            alert(\"Unknown error\");\n                                        }\n                                        \n                                    })\n                                    .catch(err => console.log(err));\n\n                                    //END LOGIN\n\n                                }\n                            })\n                            .catch(e => {\n                                console.log(e);\n                            });\n                        }}\n                    >\n                        Submit\n                    </Button>\n                    <br/><br/>\n                    <Form.Text className=\"text-muted\">\n                        * required\n                    </Form.Text>\n                </Form>\n            </Card.Body>\n            </div>\n        </Card>\n    )\n}","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Swal from 'sweetalert2';\n\nimport { apiUrlBase } from '../util';\n\nexport default function Login({ setLoggedIn }){\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [showPassword, setShowPassword] = useState(false);\n\n    const [formDisabled, setFormDisabled] = useState(true);\n    const [stayLoggedIn, setStayLoggedIn] = useState(false);\n    const [invalidLogin, setInvalidLogin] = useState(false);\n\n    const navigate = useNavigate();\n\n    return(\n        <>\n        { typeof(Storage) !== 'undefined' ?\n            <Card\n                style={{   margin: 'auto', top: '50px', width: '25%' }}\n            >\n                <Card.Body>\n                    <Card.Title>Login</Card.Title>\n\n                    {invalidLogin ?\n                    <Form.Text style={{color: \"#f00\"}}>\n                        Username or password is incorrect.\n                    </Form.Text>\n                    : <></>}\n                    \n                    <Form>\n\n                        <Form.Group className=\"mb-3\" controlId=\"username\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"johnsmith42\" \n                                onInput={e => {\n                                    setFormDisabled(password === \"\" || e.target.value === \"\");\n                                    setUsername(e.target.value);\n                                }}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            \n                            <Form.Control type={showPassword ? \"text\" : \"password\"} placeholder=\"Enter password\"  \n                                onInput={e => {\n                                    setFormDisabled(username === \"\" || e.target.value === \"\");\n                                    setPassword(e.target.value);\n                                }}\n                            />\n                        </Form.Group>\n                        \n                        <Button variant=\"light\" size=\"sm\"\n                            onClick={() => {\n                                setShowPassword(!showPassword);\n                            }}\n                        >\n                            {showPassword ? \"Hide Password\" : \"Show Password\"}\n                        </Button>\n                        <br/><br/>\n\n                        <Form.Check \n                            type={'checkbox'}\n                            id={`remember`}\n                            label={`Keep me signed in on this device.`}\n                            onClick={e => {\n                                setStayLoggedIn(e.target.checked);\n                            }}\n                        />\n                        <br/>\n\n                        <Button variant=\"primary\" type=\"submit\"\n                            disabled={formDisabled}\n                            onClick={e => {\n                                e.preventDefault();\n\n                                fetch(`${apiUrlBase}/authorization/`, {\n                                    method: 'POST',\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ username, password })\n                                })\n                                .then(res => res.json())\n                                .then(data => {\n                                    // check for invalid credentials\n                                    if(Object.keys(data).length === 1 && Object.keys(data).indexOf('non_field_errors') >= 0){\n                                        setInvalidLogin(true);\n                                    }\n                                    else{\n                                        setInvalidLogin(false);\n                                        try{\n                                            if(stayLoggedIn){\n                                                localStorage.setItem(\"auth_token\", data.token);\n                                            }\n                                            else{\n                                                sessionStorage.setItem(\"auth_token\", data.token);\n                                                localStorage.removeItem(\"auth_token\");\n                                            }\n                                            localStorage.setItem(\"username\", username);\n                                            \n                                            setLoggedIn(true);\n\n                                            Swal.fire({\n                                                icon: 'success',\n                                                title: 'Welcome',\n                                                text: 'Good to see you again'\n                                            }).then(navigate(\"/climbs\"));\n                                        }\n                                        catch(e){\n                                            console.log(e);\n                                            alert(\"Unknown error\");\n                                        }\n                                    }\n                                })\n                                .catch(err => console.log(err));\n                            }}\n                        >\n                            Login\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n            :\n            <div style={{textAlign: 'center'}}>\n                Your browser does not support web storage. This means your credentials cannot be stored. <br/>\n                You are still free to browse public guidebooks on RadRoutes!\n            </div>\n        }\n        </>\n    )\n}","import React from \"react\";\n\nimport { fetchFromApi } from \"../../../util\";\nimport { selectorSize, selectorStyle } from \"../../EditPortal\";\n\nimport Form from 'react-bootstrap/Form';\n\nexport default function BookSelector({ onChange, formData, setFormData, editableBooks, setEditableAreas }){\n    return (\n        <Form.Group className=\"mb-3\">\n            <Form.Label>Book*</Form.Label>\n            <Form.Select\n                style={selectorStyle}\n                size={selectorSize}\n                onChange={e => {\n                    if(formData){\n                        let newData = formData;\n                        newData.book = e.target.value;\n                        setFormData(newData);\n                    }\n\n                    if(setEditableAreas){\n                        fetchFromApi(`/books/${e.target.value}/areas`, setEditableAreas);\n                    }\n\n                    if (typeof onChange === 'function'){\n                        onChange();\n                    }\n                }}\n                defaultValue={\"default\"}\n            >\n                <option disabled value=\"default\">-- select book --</option>\n                {editableBooks.map((book, i) => (\n                    <option key={i} value={book.book_id}>{book.book_name}</option>\n                ))}\n            </Form.Select>\n        </Form.Group>\n    )\n}","import React from 'react';\n\nimport { fetchFromApi } from '../../../util';\nimport { selectorSize, selectorStyle } from '../../EditPortal';\n\nimport Form from 'react-bootstrap/Form';\n\nexport default function AreaSelector({ onChange, formData, setFormData, editableAreas, setEditableFeatures }){\n    return (\n        editableAreas ? <>\n            { editableAreas.length > 0 ?\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Area*</Form.Label>\n                <Form.Select\n                    style={selectorStyle}\n                    size={selectorSize}\n                    onChange={e => {\n                        if(formData){\n                            let newData = formData;\n                            newData.area = e.target.value;\n                            setFormData(newData);\n                        }\n                        \n                        if(setEditableFeatures){\n                            fetchFromApi(`/areas/${e.target.value}/features`, setEditableFeatures);\n                        }\n\n                        if (typeof onChange === 'function'){\n                            onChange();\n                        }\n                    }}\n                    defaultValue={\"default\"}\n                >\n                    <option disabled value=\"default\">-- select area --</option>\n                    {editableAreas.map((area, i) => (\n                        <option key={i} value={area.area_id}>{area.area_name}</option>\n                    ))}\n                </Form.Select>\n            </Form.Group>\n            : <>This book doesn't have any areas yet!</>}\n        </>\n        :\n        <></>\n    )\n}","import React from 'react';\n\nimport { fetchFromApi } from '../../../util';\nimport { selectorSize, selectorStyle } from '../../EditPortal';\n\nimport Form from 'react-bootstrap/Form';\n\nexport default function FeatureSelector({ onChange, formData, setFormData, editableFeatures, setEditableFaces }){\n    return (\n        editableFeatures ? <>\n            { editableFeatures.length > 0 ?\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Feature*</Form.Label>\n                <Form.Select\n                    style={selectorStyle}\n                    size={selectorSize}\n                    onChange={e => {\n                        if(formData){\n                            let newData = formData;\n                            newData.feature = e.target.value;\n                            setFormData(newData);\n                        }\n                        \n                        if(setEditableFaces){\n                            fetchFromApi(`/features/${e.target.value}/faces`, setEditableFaces);\n                        }\n\n                        if (typeof onChange === 'function'){\n                            onChange();\n                        }\n                    }}\n                    defaultValue={\"default\"}\n                >\n                    <option disabled value=\"default\">-- select feature --</option>\n                    {editableFeatures.map((feature, i) => (\n                        <option key={i} value={feature.feature_id}>{feature.feature_name}</option>\n                    ))}\n                </Form.Select>\n            </Form.Group>\n            : <>This area doesn't have any features yet!</>}\n        </>\n        :\n        <></>\n    )\n}","import React from 'react';\n\nimport { selectorSize, selectorStyle } from '../../EditPortal';\n\nimport Form from 'react-bootstrap/Form';\n\nexport default function FaceSelector({ onChange, formData, setFormData, editableFaces }){\n    return (\n        editableFaces ? <>\n            { editableFaces.length > 0 ?\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Face*</Form.Label>\n                <Form.Select\n                    style={selectorStyle}\n                    size={selectorSize}\n                    onChange={e => {\n                        if(formData){\n                            let newData = formData;\n                            newData.face = e.target.value;\n                            setFormData(newData);\n                        }\n\n                        if (typeof onChange === 'function'){\n                            onChange();\n                        }\n                    }}\n                    defaultValue={\"default\"}\n                >\n                    <option disabled value=\"default\">-- select face --</option>\n                    {editableFaces.map((face, i) => (\n                        <option key={i} value={face.face_id}>{face.face_name}</option>\n                    ))}\n                </Form.Select>\n            </Form.Group>\n            : <>This feature doesn't have any faces yet!</>}\n        </>\n        :\n        <></>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Swal from 'sweetalert2';\n\nimport BookSelector from './selectors/BookSelector';\nimport AreaSelector from './selectors/AreaSelector';\nimport FeatureSelector from './selectors/FeatureSelector';\nimport FaceSelector from './selectors/FaceSelector';\n\nimport { fetchFromApi, getAuth, apiUrlBase } from '../../util';\n\nconst defaultFormData = {\n    climb_name: null,\n    climb_type: null,\n    face_id: null, //TODO\n    grade: null,\n    height: null,\n    description: null,\n}\n\nexport default function EditClimb(){\n    const [formData, setFormData] = useState(defaultFormData);\n\n    const [editableBooks, setEditableBooks] = useState(null);\n    const [editableAreas, setEditableAreas] = useState(null);\n    const [editableFeatures, setEditableFeatures] = useState(null);\n    const [editableFaces, setEditableFaces] = useState(null);\n\n    const [formDisabled, setFormDisabled] = useState(true);\n\n    useEffect(() => {\n        fetchFromApi(`/owned/`, setEditableBooks);\n    }, [])\n\n    return (\n        editableBooks ?\n        <>\n        { editableBooks.length > 0 ?\n        <Container>\n            <Form style={{ margin: 'auto'}}>\n                <BookSelector editableBooks={editableBooks} setEditableAreas={setEditableAreas} />\n                \n                <AreaSelector editableAreas={editableAreas} setEditableFeatures={setEditableFeatures} />\n\n                <FeatureSelector editableFeatures={editableFeatures} setEditableFaces={setEditableFaces} />\n\n                <FaceSelector onChange={() => setFormDisabled(false)} formData={formData} setFormData={setFormData} editableFaces={editableFaces} />\n\n                <Form.Group className=\"mb-3\" controlId=\"climb_name\">\n                    <Form.Label>Climb Name*</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.climb_name = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"climb_type\">\n                    <Form.Label>Climb Type</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.climb_type = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"grade\">\n                    <Form.Label>Grade</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.grade = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"height\">\n                    <Form.Label>Height {navigator.language.toLowerCase() === 'en-us' ? '(ft)' : '(m)'}</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            if((Number.isInteger(parseInt(e.target.value))) || (e.target.value === \"\")){\n                                let newData = formData;\n                                let meters = parseInt(e.target.value);\n                                newData.height = navigator.language.toLowerCase() === 'en-us' ? Math.round(meters / 3.28084) : meters;\n                                setFormData(newData);\n                            }\n                            else{\n                                Swal.fire({\n                                    icon: 'error',\n                                    title: 'Height must be a number',\n                                    text: `Please Try Again.`\n                                });\n                                e.target.value = \"\";\n                            }\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} \n                        onInput={e => {\n                            let newData = formData;\n                            newData.description = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                    <Form.Label>Climb Image</Form.Label>\n                    <Form.Control type=\"file\" />\n                </Form.Group>\n\n                <Button \n                    variant=\"primary\" \n                    type=\"submit\"\n                    disabled={formDisabled}\n                    onClick={e => {\n                        e.preventDefault();\n\n                        const token = getAuth();\n                        let headers = {\n                            'Content-Type': 'application/json'\n                        }\n                        if(token){\n                            headers['Authorization'] = `Token ${token}`;\n                        }\n\n                        fetch(`${apiUrlBase}/climbs/`, {\n                            method: 'POST',\n                            headers: headers,\n                            body: JSON.stringify(formData)\n                        })\n                        .then(res => {\n                            if(res.ok){\n                                return res.json();\n                            }\n                            const contentType = res.headers.get(\"content-type\");\n                            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n                                return res.json().then(data => {\n                                    if(Object.keys(data).indexOf('detail') >= 0){\n                                        throw Error(data.detail);\n                                    }\n                                    else{\n                                        let err;\n                                        try{\n                                            err = JSON.stringify(data);\n                                        }\n                                        catch(e){\n                                            throw Error(\"unknown error\");\n                                        }\n                                        throw Error(err);\n                                    }\n                                });\n                            }\n                        })\n                        .then(data => {\n                            console.log(data);\n                            \n                            if(Object.keys(data).indexOf('detail') >= 0){\n                                Swal.fire({\n                                    icon: 'error',\n                                    text: data.detail\n                                });\n                            }\n                            else {\n                                Swal.fire({\n                                    icon: 'success',\n                                    title: 'Climb Created',\n                                    text: `Successfully created climb ${formData.climb_name} (id ${data.climb_id})`\n                                });\n                            }\n                        })\n                        .catch(e => {\n                            console.log(e);\n                            Swal.fire({\n                                icon: 'error',\n                                text: e\n                            })\n                        });\n                    }}\n                >\n                    Save Changes\n                </Button>\n            </Form>\n        </Container>\n        : <>Nothing available</>}\n        </>\n        : \n        <></>\n    )\n}","import React, { useEffect, useState } from 'react';\n\nimport { getAuth, fetchFromApi, formFieldErrorRed } from '../../util';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Swal from 'sweetalert2';\n\nimport BookSelector from './selectors/BookSelector';\n\nimport { apiUrlBase } from '../../util';\n\nconst defaultFormData = {\n    book: null,\n    area_name: null,\n    area_description: null\n}\n\nexport default function EditArea(){\n    const [formData, setFormData] = useState(defaultFormData);\n    const [editableBooks, setEditableBooks] = useState(null);\n\n    const [nameBg, setNameBg] = useState(null);\n\n    const [formDisabled, setFormDisabled] = useState(true);\n\n    useEffect(() => {\n        fetchFromApi(\"/owned/\", setEditableBooks);\n    }, [])\n\n    return (\n        editableBooks ?\n        <>\n            {editableBooks.length > 0 ?\n            <Container>\n                <Form style={{ margin: 'auto'}}>\n                    <BookSelector onChange={() => setFormDisabled(false)} formData={formData} setFormData={setFormData} editableBooks={editableBooks} />\n\n                    <Form.Group className=\"mb-3\" controlId=\"area\">\n                        <Form.Label>Area Name*</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"\"\n                            style={{\n                                background: nameBg\n                            }}\n                            onInput={e => {\n                                if(e.target.value === \"\"){\n                                    setNameBg(formFieldErrorRed);\n                                    setFormDisabled(true);\n                                }\n                                else{\n                                    setNameBg(null);\n                                    let newData = formData;\n                                    newData.area_name = e.target.value;\n                                    setFormData(newData);\n                                    setFormDisabled(false);\n                                }\n                            }}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3}\n                            onInput={e => {\n                                let newData = formData;\n                                newData.area_description = e.target.value;\n                                setFormData(newData);\n                            }}\n                        />\n                    </Form.Group>\n\n                    <Button \n                        variant=\"primary\" \n                        type=\"submit\"\n                        disabled={formDisabled}\n                        onClick={e => {\n                            e.preventDefault();\n\n                            console.log(formData);\n\n                            if(formData.area_name === null){\n                                setNameBg(formFieldErrorRed);\n                                return;\n                            }\n\n                            const token = getAuth();\n                            let headers = {\n                                'Content-Type': 'application/json'\n                            }\n                            if(token){\n                                headers['Authorization'] = `Token ${token}`;\n                            }\n\n                            fetch(`${apiUrlBase}/areas/`, {\n                                method: 'POST',\n                                headers: headers,\n                                body: JSON.stringify(formData)\n                            })\n                            .then(res => {\n                                if(res.ok){\n                                    return res.json();\n                                }\n                                const contentType = res.headers.get(\"content-type\");\n                                if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n                                    return res.json().then(data => {\n                                        if(Object.keys(data).indexOf('detail') >= 0){\n                                            throw Error(data.detail);\n                                        }\n                                        else{\n                                            let err;\n                                            try{\n                                                err = JSON.stringify(data);\n                                            }\n                                            catch(e){\n                                                throw Error(\"unknown error\");\n                                            }\n                                            throw Error(err);\n                                        }\n                                    });\n                                }\n                            })\n                            .then(data => {\n                                console.log(data);\n                                \n                                if(Object.keys(data).indexOf('detail') >= 0){\n                                    Swal.fire({\n                                        icon: 'error',\n                                        text: data.detail\n                                    });\n                                }\n                                else {\n                                    Swal.fire({\n                                        icon: 'success',\n                                        title: 'Area Created',\n                                        text: `Successfully created area ${formData.area_name}`\n                                    });\n                                }\n                            })\n                            .catch(e => {\n                                console.log(e);\n                                Swal.fire({\n                                    icon: 'error',\n                                    text: e\n                                })\n                            });\n                        }}\n                    >\n                        Save Changes\n                    </Button>\n                </Form>\n            </Container>\n            :\n            <>You don't have any books yet!</>}\n        </>\n        :\n        <></>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Swal from 'sweetalert2';\n\nimport { fetchFromApi, getAuth, apiUrlBase } from '../../util';\n\nimport BookSelector from './selectors/BookSelector';\nimport AreaSelector from './selectors/AreaSelector';\n\nconst defaultFormData = {\n    feature_name: null,\n    feature_description: null,\n    gps: null,\n    location: null,\n    area: null\n}\n\nexport default function EditFeature(){\n    const [formData, setFormData] = useState(defaultFormData);\n\n    const [editableBooks, setEditableBooks] = useState(null);\n    const [editableAreas, setEditableAreas] = useState(null);\n\n    const [formDisabled, setFormDisabled] = useState(true);\n\n    useEffect(() => {\n        fetchFromApi(\"/owned/\", setEditableBooks);\n    }, []);\n\n    return (\n        editableBooks ?\n        <>\n        { editableBooks.length > 0 ?\n        <Container>\n            <Form style={{ margin: 'auto'}}>\n                <BookSelector setEditableAreas={setEditableAreas} editableBooks={editableBooks} />\n\n                <AreaSelector onChange={() => setFormDisabled(false)} formData={formData} setFormData={setFormData} editableAreas={editableAreas} />\n\n                <Form.Group className=\"mb-3\" controlId=\"feature_name\">\n                    <Form.Label>Feature Name*</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.feature_name = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"feature_description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} \n                        onInput={e => {\n                            let newData = formData;\n                            newData.feature_description = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"gps\">\n                    <Form.Label>GPS</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.gps = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"location\">\n                    <Form.Label>Location</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} \n                        onInput={e => {\n                            let newData = formData;\n                            newData.location = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Button \n                    variant=\"primary\" \n                    type=\"submit\"\n                    disabled={formDisabled}\n                    onClick={e => {\n                        e.preventDefault();\n\n                        const token = getAuth();\n                        let headers = {\n                            'Content-Type': 'application/json'\n                        }\n                        if(token){\n                            headers['Authorization'] = `Token ${token}`;\n                        }\n\n                        fetch(`${apiUrlBase}/features/`, {\n                            method: 'POST',\n                            headers: headers,\n                            body: JSON.stringify(formData)\n                        })\n                        .then(res => {\n                            if(res.ok){\n                                return res.json();\n                            }\n                            const contentType = res.headers.get(\"content-type\");\n                            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n                                return res.json().then(data => {\n                                    if(Object.keys(data).indexOf('detail') >= 0){\n                                        throw Error(data.detail);\n                                    }\n                                    else{\n                                        let err;\n                                        try{\n                                            err = JSON.stringify(data);\n                                        }\n                                        catch(e){\n                                            throw Error(\"unknown error\");\n                                        }\n                                        throw Error(err);\n                                    }\n                                });\n                            }\n                        })\n                        .then(data => {\n                            console.log(data);\n                            \n                            if(Object.keys(data).indexOf('detail') >= 0){\n                                Swal.fire({\n                                    icon: 'error',\n                                    text: data.detail\n                                });\n                            }\n                            else {\n                                Swal.fire({\n                                    icon: 'success',\n                                    title: 'Feature Created',\n                                    text: `Successfully created feature ${formData.feature_name} (id ${data.feature_id})`\n                                });\n                            }\n                        })\n                        .catch(e => {\n                            console.log(e);\n                            Swal.fire({\n                                icon: 'error',\n                                text: e\n                            })\n                        });\n                    }}\n                >\n                    Save Changes\n                </Button>\n            </Form>\n        </Container>\n        : <>Nothing available</>}\n        </>\n        : \n        <></>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Swal from 'sweetalert2';\n\nimport BookSelector from './selectors/BookSelector';\nimport AreaSelector from './selectors/AreaSelector';\nimport FeatureSelector from './selectors/FeatureSelector';\nimport { getAuth, fetchFromApi, apiUrlBase } from '../../util';\n\nconst defaultFormData = {\n    face_name: null,\n    description: null,\n    feature_id: null\n}\n\nexport default function EditFace(){\n    const [formData, setFormData] = useState(defaultFormData);\n\n    const [editableBooks, setEditableBooks] = useState(null);\n    const [editableAreas, setEditableAreas] = useState(null);\n    const [editableFeatures, setEditableFeatures] = useState(null);\n\n    const [formDisabled, setFormDisabled] = useState(true);\n\n    useEffect(() => {\n        fetchFromApi(`/owned/`, setEditableBooks);\n    }, [])\n\n    return (\n        editableBooks ?\n        <>\n        { editableBooks.length > 0 ?\n        <Container>\n            <Form style={{ margin: 'auto'}}>\n                <BookSelector editableBooks={editableBooks} setEditableAreas={setEditableAreas} />\n                \n                <AreaSelector editableAreas={editableAreas} setEditableFeatures={setEditableFeatures} />\n\n                <FeatureSelector onChange={() => setFormDisabled(false)} formData={formData} setFormData={setFormData} editableFeatures={editableFeatures} />\n\n                <Form.Group className=\"mb-3\" controlId=\"face_name\">\n                    <Form.Label>Face Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.face_name = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"face_description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} \n                        onInput={e => {\n                            let newData = formData;\n                            newData.face_description = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"image\" className=\"mb-3\">\n                    <Form.Label>Face Image</Form.Label>\n                    <Form.Control type=\"file\" />\n                </Form.Group>\n\n                <Button \n                    variant=\"primary\" \n                    type=\"submit\"\n                    disabled={formDisabled}\n                    onClick={e => {\n                        e.preventDefault();\n\n                        const token = getAuth();\n                        let headers = {\n                            'Content-Type': 'application/json'\n                        }\n                        if(token){\n                            headers['Authorization'] = `Token ${token}`;\n                        }\n\n                        fetch(`${apiUrlBase}/faces/`, {\n                            method: 'POST',\n                            headers: headers,\n                            body: JSON.stringify(formData)\n                        })\n                        .then(res => {\n                            if(res.ok){\n                                return res.json();\n                            }\n                            const contentType = res.headers.get(\"content-type\");\n                            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n                                return res.json().then(data => {\n                                    if(Object.keys(data).indexOf('detail') >= 0){\n                                        throw Error(data.detail);\n                                    }\n                                    else{\n                                        let err;\n                                        try{\n                                            err = JSON.stringify(data);\n                                        }\n                                        catch(e){\n                                            throw Error(\"unknown error\");\n                                        }\n                                        throw Error(err);\n                                    }\n                                });\n                            }\n                        })\n                        .then(data => {\n                            console.log(data);\n                            \n                            if(Object.keys(data).indexOf('detail') >= 0){\n                                Swal.fire({\n                                    icon: 'error',\n                                    text: data.detail\n                                });\n                            }\n                            else {\n                                Swal.fire({\n                                    icon: 'success',\n                                    title: 'Face Created',\n                                    text: `Successfully created face ${formData.face_name} (id ${data.face_id})`\n                                });\n                            }\n                        })\n                        .catch(e => {\n                            console.log(e);\n                            Swal.fire({\n                                icon: 'error',\n                                text: e\n                            })\n                        });\n                    }}\n                >\n                    Save Changes\n                </Button>\n            </Form>\n        </Container>\n        : <>Nothing available</>}\n        </>\n        : \n        <></>\n    )\n}","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Swal from 'sweetalert2';\nimport { getAuth, apiUrlBase } from '../../util';\n\nconst defaultFormData = {\n    book_name: null,\n    book_description: null,\n    public: false,\n    listed: false,\n    grade_hist: \"1, 4, 3\",\n}\n\nexport default function EditBook(){\n    const [formData, setFormData] = useState(defaultFormData);\n\n    return (\n        <Container>\n            <Form style={{ margin: 'auto'}}>\n                <Form.Group className=\"mb-3\" controlId=\"area\">\n                    <Form.Label>Book Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.book_name = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"book_description\">\n                    <Form.Label>Book Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} \n                        onInput={e => {\n                            let newData = formData;\n                            newData.book_description = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Check \n                    type={'checkbox'}\n                    id={`public`}\n                    label={`Public`}\n                    onInput={e => {\n                        let newData = formData;\n                        newData.public = e.target.checked;\n                        setFormData(newData);\n                    }}\n                />\n\n                <Form.Check \n                    type={'checkbox'}\n                    id={`listed`}\n                    label={`Listed`}\n                    onInput={e => {\n                        let newData = formData;\n                        newData.listed = e.target.checked;\n                        setFormData(newData);\n                    }}\n                />\n\n                <br />\n\n                <Button \n                    variant=\"primary\" \n                    type=\"submit\"\n                    onClick={e => {\n                        e.preventDefault();\n\n                        const token = getAuth();\n                        let headers = {\n                            'Content-Type': 'application/json'\n                        }\n                        if(token){\n                            headers['Authorization'] = `Token ${token}`;\n                        }\n\n                        fetch(`${apiUrlBase}/books/`, {\n                            method: 'POST',\n                            headers: headers,\n                            body: JSON.stringify(formData)\n                        })\n                        .then(res => {\n                            if(res.ok){\n                                return res.json();\n                            }\n                            const contentType = res.headers.get(\"content-type\");\n                            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n                                return res.json().then(data => {\n                                    if(Object.keys(data).indexOf('detail') >= 0){\n                                        throw Error(data.detail);\n                                    }\n                                    else{\n                                        let err;\n                                        try{\n                                            err = JSON.stringify(data);\n                                        }\n                                        catch(e){\n                                            throw Error(\"unknown error\");\n                                        }\n                                        throw Error(err);\n\n                                    }\n                                });\n                            }\n                        })\n                        .then(data => {\n                            console.log(data);\n\n                            if(Object.keys(data).indexOf('detail') >= 0){\n                                Swal.fire({\n                                    icon: 'error',\n                                    text: data.detail\n                                });\n                            }\n                            else {\n                                Swal.fire({\n                                    icon: 'success',\n                                    title: 'Book Created',\n                                    text: `Successfully created book ${formData.book_name}`\n                                });\n                            }\n                        })\n                        .catch(e => {\n                            console.log(e);\n                            Swal.fire({\n                                icon: 'error',\n                                text: e\n                            })\n                        });\n                    }}\n                >\n                    Save Changes\n                </Button>\n            </Form>\n        </Container>\n    )\n}","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\n\nimport EditClimb from './editPortals/EditClimb.js';\nimport EditArea from './editPortals/EditArea.js';\nimport EditFeature from './editPortals/EditFeature.js';\nimport EditFace from './editPortals/EditFace.js';\nimport EditBook from './editPortals/EditBook.js';\n\nexport const selectorStyle = {\n    marginLeft: 20,\n    width: 'clamp(200px, 25%, 400px)',\n}\n\nexport const selectorSize = \"md\";\n\nexport default function EditPortal(){\n\n    const [selectedForm, setForm] = useState('Book');\n\n    const renderForm = () => {\n        switch(selectedForm) {\n            case 'Climb': \n                return <EditClimb />;\n          \n            case 'Area': \n                return <EditArea />;\n    \n            case 'Feature': \n                return <EditFeature />;\n    \n            case 'Face': \n                return <EditFace />;\n\n            case 'Book': \n                return <EditBook />;\n    \n            default: \n                return null;\n          \n        }\n    }\n\n    return(\n        <Card\n            style={{   margin: 'auto', top: '50px', width: '50%' }}\n        >\n        \n            <Card.Body>\n                <div style={{ display: 'flex' }}>\n                    <Card.Title style={{ lineHeight: 2 }}>Create a new</Card.Title>\n\n                    <Form.Select\n                        style={{\n                            marginLeft: 20,\n                            width: 'clamp(200px, 25%, 400px)',\n                        }}\n                        size=\"lg\"\n                        onChange={e => {\n                            setForm(e.target.value);\n                        }}\n                    >\n                        <option value=\"Book\">Book</option>\n                        <option value=\"Area\">Area</option>\n                        <option value=\"Feature\">Feature</option>\n                        <option value=\"Face\">Face</option>\n                        <option value=\"Climb\">Climb</option>\n\n                    </Form.Select>\n                </div>\n\n                <br />\n\n                {renderForm()}\n\n            </Card.Body>\n        </Card>\n    )\n}","import React, { useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nexport default function RadNavbar({ loggedIn, setLoggedIn }) {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setLoggedIn(Object.keys(sessionStorage).indexOf(\"auth_token\") >= 0 || Object.keys(localStorage).indexOf(\"auth_token\") >= 0);\n  }, [setLoggedIn]);\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" sticky=\"top\" style={{ minWidth: '100vw', maxWidth: '100vw' }}>\n      <Container fluid>\n        <Navbar.Brand\n          style={{cursor: \"pointer\"}}\n          onClick={() => navigate(\"/\")}\n        >\n          Rad Routes\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link onClick={() => navigate(\"/books\")}>Guidebooks</Nav.Link>\n            <Nav.Link onClick={() => navigate(\"/areas\")}>Areas</Nav.Link>\n            <Nav.Link onClick={() => navigate(\"/features\")}>Features</Nav.Link>\n            <Nav.Link onClick={() => navigate(\"/faces\")}>Faces</Nav.Link>\n            <Nav.Link onClick={() => navigate(\"/climbs\")}>Climbs</Nav.Link>\n            {\n              loggedIn ?\n              <Nav.Link onClick={() => navigate(\"/create\")}>Create</Nav.Link>\n              :\n              <></>\n            }\n          </Nav>\n          <Nav className=\"justify-content-end\" style={{width: '100%'}}>\n            { \n              !loggedIn ? <>\n                <Nav.Link onClick={() => navigate(\"/signup\")}>Sign Up</Nav.Link>\n                <Nav.Link onClick={() => navigate(\"/login\")}>Login</Nav.Link>\n              </>\n              :\n              <NavDropdown menuVariant=\"dark\" title={localStorage.username} id=\"user-dropdown\">\n                <Nav.Link\n                  onClick={() => {\n                    for(let item of [\"username\", \"auth_token\"]){\n                      localStorage.removeItem(item);\n                      sessionStorage.removeItem(item);\n                    }\n                    setLoggedIn(false);\n                    navigate(\"/\");\n                    window.location.reload();\n                  }}\n                >\n                  Logout\n                </Nav.Link>\n              </NavDropdown>\n            }\n            <div style={{minWidth: 100}}></div>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import React from 'react';\nimport RadNavbar from './RadNavbar';\n\nexport default function Layout({ children, loggedIn, setLoggedIn }){\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', height: '100vh'}}>\n            {/* side drawer */}\n            <RadNavbar loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>\n\n            <div style={{flexGrow: 1}}>\n                {children}\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Button from 'react-bootstrap/Button';\n\nexport default function NotFound(){\n    const navigate = useNavigate();\n\n    return (\n        <div style={{ \n            height: '100%',\n            display: 'grid', \n            placeItems: 'center',\n            fontSize: 48 \n        }}>\n            <div style={{\n                textAlign:'center'\n            }}>\n                404: page not found <br/>\n                <Button\n                    variant=\"dark\"\n                    onClick={() => {\n                        navigate(\"/books\"); \n                    }}\n                >\n                    Explore Guidebooks</Button>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { getAuth, apiUrlBase, fetchFromApi } from '../../util';\n\nimport Swal from 'sweetalert2';\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nconst defaultAuthorObj = {\n  username: \"\",\n  first_name: \"\",\n  last_name: \"\"\n}\n\nexport default function Book({ data, deleteThis, loggedIn }) {\n  const bookObj = data;\n  const navigate = useNavigate();\n  const [authorObj, setAuthorObj] = useState(defaultAuthorObj);\n\n  useEffect(() => {\n    fetchFromApi(`/users/${data.author}`, setAuthorObj);\n  }, [data])\n\n  return (\n    !bookObj || Object.keys(bookObj).length > 1 ?\n    <Card\n      style={{ \n        width: '36rem',\n        margin: 10,\n        cursor: 'pointer'\n      }}\n      onClick={() => {\n        console.log(bookObj);\n        navigate(`/books/${bookObj.book_id}`);\n      }}\n    >\n        <Card.Body style={{ minWidth: '60%', lineHeight: '2rem'}}>\n          <Card.Title>{bookObj.book_name}</Card.Title>\n          <Card.Text style={{ marginTop: '1rem' }}>{bookObj.book_description}</Card.Text>\n          Best Quality: <b>{bookObj.quality_max}</b> <br/>\n          <Card.Text>by {authorObj.username}</Card.Text>\n          { typeof deleteThis === 'function' && loggedIn ?\n          <Button variant=\"danger\"\n            onClick={e => {\n              e.stopPropagation();\n              Swal.fire({\n                icon: 'warning',\n                title: `Are you sure you want to delete \"${bookObj.book_name}\"?`,\n                text: `Type \"${bookObj.book_name}\" to confirm.`,\n                showCancelButton: true,\n                focusCancel: true,\n                confirmButtonText: `Delete ${bookObj.book_name}`,\n                confirmButtonColor: '#f33',\n                input: 'text',\n                inputAttributes: {\n                  autocapitalize: 'off'\n                }\n              }).then(result => {\n                if(result.isConfirmed && result.value === bookObj.book_name){\n                  console.log(bookObj);\n    \n                  const token = getAuth();\n                  const headers = token ? {\n                      \"Authorization\": `Token ${token}`\n                  } : {};\n    \n                  fetch(`${apiUrlBase}/books/${bookObj.book_id}`, {\n                    method: 'DELETE',\n                    headers: headers\n                  })\n                  .then(res => {\n                    if(res.ok){\n                      console.log(res.text, bookObj);\n        \n                      try{\n                        Swal.fire({\n                          icon: 'success',\n                          text: `successfully deleted ${bookObj.book_name}`\n                        });\n                      }\n                      catch(e){\n                        console.log(e);\n                      }\n        \n                      deleteThis();\n                    }\n                    else{\n                      throw Error(\"Could not delete this book. Are you sure you own it?\");\n                    }\n                  })\n                  .catch(e => {\n                    Swal.fire({\n                      icon: 'error',\n                      text: e\n                    })\n                  })\n                }\n              })\n            }}\n          >\n            Delete\n          </Button>\n          : <></>}\n        </Card.Body>\n    </Card> : <>This Book Does Not Exist</>\n  )\n}","import React, { useEffect, useState } from 'react';\n\nimport { fetchFromApi } from '../../util';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport BookCard from '../Card/BookCard';\n\nexport default function BookList({ loggedIn }){\n    const [bookList, setBookList] = useState([]);\n\n    useEffect(() => {\n        fetchFromApi(\"books/\", setBookList);\n    }, []);\n\n    return (\n        bookList.length > 0 ?\n        <Row xs={1} md={2} lg={3} style={{ width: '100%' }}>\n            {bookList.map((book, idx) => (\n                <Col\n                    key={idx}\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <BookCard\n                        data={book}\n                        loggedIn={loggedIn}\n                        deleteThis={() => {\n                            let newList = bookList.slice();\n                            newList.splice(idx, 1);\n                            setBookList(newList);\n                        }}\n                    />\n                </Col>\n            ))}\n        </Row>\n        :\n        (\n            loggedIn ?\n            <div style={{textAlign: 'center'}}>No Books Available</div>\n            :\n            <div style={{textAlign: 'center'}}>Log in to see available books</div>\n        )\n    )\n}","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Swal from 'sweetalert2';\n\nimport { getAuth, apiUrlBase } from '../../util';\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nexport default function AreaCard({ data, onPage, deleteThis, loggedIn }) {\n  const areaObj = data;\n  const navigate = useNavigate();\n\n  return (\n    Object.keys(areaObj).length > 1 ?\n    <Card\n      style={{ width: '36rem', margin: 10 }}\n    >\n        <Card.Body style={{ minWidth: '60%', lineHeight: '2rem'}}>\n          <Card.Title>{areaObj.area_name}</Card.Title>\n          <Card.Text style={{ marginTop: '1rem' }}>{areaObj.area_description}</Card.Text>\n          Quality: <b>{areaObj.area_quality}</b> <br/>\n          {!onPage ?\n            <>\n              <Card.Link onClick={() => navigate(`/books/${areaObj.book}`)}>Guidebook</Card.Link><br/>\n            </>\n          : <></>}\n          <Card.Link onClick={() => navigate(`/areas/${areaObj.area_id}`)}>Features</Card.Link><br/>\n          { typeof deleteThis === 'function' && loggedIn ?\n          <Button variant=\"danger\"\n            onClick={() => {\n              Swal.fire({\n                icon: 'warning',\n                title: `Are you sure you want to delete \"${areaObj.area_name}\"?`,\n                showCancelButton: true,\n                focusCancel: true,\n                confirmButtonText: `Delete ${areaObj.area_name}`,\n                confirmButtonColor: '#f33'\n              }).then(result => {\n                if(result.isConfirmed){\n                  console.log(areaObj);\n    \n                  const token = getAuth();\n                  const headers = token ? {\n                      \"Authorization\": `Token ${token}`\n                  } : {};\n    \n                  fetch(`${apiUrlBase}/areas/${areaObj.area_id}`, {\n                    method: 'DELETE',\n                    headers: headers\n                  })\n                  .then(res => {\n                    if(res.ok){\n                      console.log(res.text, areaObj);\n        \n                      try{\n                        Swal.fire({\n                          icon: 'success',\n                          text: `successfully deleted ${areaObj.area_name}`\n                        });\n                      }\n                      catch(e){\n                        console.log(e);\n                      }\n        \n                      deleteThis();\n                    }\n                    else{\n                      throw Error(\"Could not delete this area. Are you sure you own it?\");\n                    }\n                  })\n                  .catch(e => {\n                    Swal.fire({\n                      icon: 'error',\n                      text: e\n                    })\n                  })\n                }\n              })\n            }}\n          >\n            Delete\n          </Button>\n          : <></>}\n        </Card.Body>\n    </Card> : <>This Area Does Not Exist</>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport AreaCard from '../Card/AreaCard';\n\nexport default function AreaList({ loggedIn, bookId, onPage }){\n    const [areaList, setAreaList] = useState([]);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        let path;\n        if(bookId){\n            path = `/books/${bookId}/areas/`\n        }\n        else if(id){\n            path = `/books/${id}/areas/`;\n        }\n        else{\n            path = `/areas/`;\n        }\n\n        fetchFromApi(path, setAreaList);\n    }, [id, bookId]);\n\n    return (\n        areaList.length > 0 ?\n        <Row xs={1} md={2} lg={3} style={{ width: '100%' }}>\n            {areaList.map((area, idx) => (\n                <Col\n                    key={idx}\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <AreaCard\n                        data={area}\n                        onPage={onPage}\n                        loggedIn={loggedIn}\n                        deleteThis={() => {\n                            let newList = areaList.slice();\n                            newList.splice(idx, 1);\n                            setAreaList(newList);\n                        }}\n                    />\n                </Col>\n            ))}\n        </Row>\n        :\n        (\n            loggedIn ?\n            <div style={{textAlign: 'center'}}>No Areas Available</div>\n            :\n            <div style={{textAlign: 'center'}}>Log in to see available areas</div>\n        )\n    )\n}","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Swal from 'sweetalert2';\n\nimport { getAuth, apiUrlBase } from '../../util';\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nexport default function Feature({ data, onPage, deleteThis, loggedIn }) {\n  const featureObj = data;\n  const navigate = useNavigate();\n\n  return (\n    Object.keys(featureObj).length > 1 ?\n    <Card\n      style={{ width: '36rem', margin: 10 }}\n      onClick={() => {\n        console.log(featureObj);\n      }}\n    >\n        <Card.Body style={{ minWidth: '60%', lineHeight: '2rem'}}>\n          <Card.Title>{featureObj.feature_name}</Card.Title>\n          <Card.Text style={{ marginTop: '1rem' }}>{featureObj.feature_description}</Card.Text>\n          Location: <b>{featureObj.location}</b> <br/>\n          GPS: <b>{featureObj.gps}</b> <br/>\n          {!onPage ? \n            <><Card.Link onClick={() => navigate(`/areas/${featureObj.area}`)}>Area</Card.Link><br/></>\n            :\n            <></>}\n          <Card.Link onClick={() => navigate(`/features/${featureObj.feature_id}`)}>Faces</Card.Link><br/>\n          { typeof deleteThis === 'function' && loggedIn ?\n          <Button variant=\"danger\"\n            onClick={() => {\n              Swal.fire({\n                icon: 'warning',\n                title: `Are you sure you want to delete \"${featureObj.feature_name}\"?`,\n                showCancelButton: true,\n                focusCancel: true,\n                confirmButtonText: `Delete ${featureObj.feature_name}`,\n                confirmButtonColor: '#f33'\n              }).then(result => {\n                if(result.isConfirmed){\n                  console.log(featureObj);\n    \n                  const token = getAuth();\n                  const headers = token ? {\n                      \"Authorization\": `Token ${token}`\n                  } : {};\n    \n                  fetch(`${apiUrlBase}/features/${featureObj.feature_id}`, {\n                    method: 'DELETE',\n                    headers: headers\n                  })\n                  .then(res => {\n                    if(res.ok){\n                      console.log(res.text, featureObj);\n        \n                      try{\n                        Swal.fire({\n                          icon: 'success',\n                          text: `successfully deleted ${featureObj.feature_name}`\n                        });\n                      }\n                      catch(e){\n                        console.log(e);\n                      }\n        \n                      deleteThis();\n                    }\n                    else{\n                      throw Error(\"Could not delete this feature. Are you sure you own it?\");\n                    }\n                  })\n                  .catch(e => {\n                    Swal.fire({\n                      icon: 'error',\n                      text: e\n                    })\n                  })\n                }\n              })\n            }}\n          >\n            Delete\n          </Button>\n          : <></>}\n        </Card.Body>\n    </Card> : <>This Feature Does Not Exist</>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport FeatureCard from '../Card/FeatureCard';\n\nexport default function BookList({ loggedIn, areaId, onPage }){\n    const [featureList, setFeatureList] = useState([]);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        let path;\n        if(areaId){\n            path = `/areas/${areaId}/features`\n        }\n        else if (id){\n            path = `/areas/${id}/features`\n        }\n        else{\n            path = '/features/'\n        }\n\n        fetchFromApi(path, setFeatureList);\n    }, [id, areaId]);\n\n    return (\n        featureList.length > 0 ?\n        <Row xs={1} md={2} lg={3} style={{ width: '100%' }}>\n            {featureList.map((feature, idx) => (\n                <Col\n                    key={idx}\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <FeatureCard\n                        data={feature}\n                        onPage={onPage}\n                        loggedIn={loggedIn}\n                        deleteThis={() => {\n                            let newList = featureList.slice();\n                            newList.splice(idx, 1);\n                            setFeatureList(newList);\n                        }}\n                    />\n                </Col>\n            ))}\n        </Row>\n        :\n        (\n            loggedIn ?\n            <div style={{textAlign: 'center'}}>No Features Available</div>\n            :\n            <div style={{textAlign: 'center'}}>Log in to see available features</div>\n        )\n    )\n}","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Swal from 'sweetalert2';\n\nimport { getAuth, apiUrlBase } from '../../util';\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nexport default function Feature({ data, onPage, deleteThis, loggedIn }) {\n  const faceObj = data;\n  const navigate = useNavigate();\n\n  return (\n    Object.keys(faceObj).length > 1 ?\n    <Card\n      style={{ width: '36rem', margin: 10 }}\n      onClick={() => {\n        console.log(faceObj);\n      }}\n    >\n        <Card.Body style={{ minWidth: '60%', lineHeight: '2rem'}}>\n          <Card.Title>{faceObj.face_name}</Card.Title>\n          <Card.Text style={{ marginTop: '1rem' }}>{faceObj.face_description}</Card.Text>\n          {!onPage ? <>\n            <Card.Link onClick={() => navigate(`/features/${faceObj.feature}`)}>Feature</Card.Link><br/>\n          </>\n          : <></>}\n          <Card.Link onClick={() => navigate(`/faces/${faceObj.face_id}`)}>Climbs</Card.Link><br/>\n          { typeof deleteThis === 'function' && loggedIn ?\n          <Button variant=\"danger\"\n            onClick={() => {\n              Swal.fire({\n                icon: 'warning',\n                title: `Are you sure you want to delete \"${faceObj.face_name}\"?`,\n                showCancelButton: true,\n                focusCancel: true,\n                confirmButtonText: `Delete ${faceObj.face_name}`,\n                confirmButtonColor: '#f33'\n              }).then(result => {\n                if(result.isConfirmed){\n                  console.log(faceObj);\n    \n                  const token = getAuth();\n                  const headers = token ? {\n                      \"Authorization\": `Token ${token}`\n                  } : {};\n    \n                  fetch(`${apiUrlBase}/faces/${faceObj.face_id}`, {\n                    method: 'DELETE',\n                    headers: headers\n                  })\n                  .then(res => {\n                    if(res.ok){\n                      console.log(res.text, faceObj);\n        \n                      try{\n                        Swal.fire({\n                          icon: 'success',\n                          text: `successfully deleted ${faceObj.face_name}`\n                        });\n                      }\n                      catch(e){\n                        console.log(e);\n                      }\n        \n                      deleteThis();\n                    }\n                    else{\n                      throw Error(\"Could not delete this face. Are you sure you own it?\");\n                    }\n                  })\n                  .catch(e => {\n                    Swal.fire({\n                      icon: 'error',\n                      text: e\n                    })\n                  })                  \n                }\n              });\n            }}\n          >\n            Delete\n          </Button>\n          : <></>}\n        </Card.Body>\n    </Card> : <>This Face Does Not Exist</>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport FaceCard from '../Card/FaceCard';\n\nexport default function BookList({ loggedIn, featureId, onPage }){\n    const [faceList, setFaceList] = useState([]);\n    const { id } = useParams();\n\n    useEffect(() => {\n        let path;\n        if(featureId){\n            path = `/features/${featureId}/faces`\n        }\n        else if(id){\n            path = `/features/${id}/faces`\n        }\n        else{\n            path = \"/faces\"\n        }\n\n        fetchFromApi(path, setFaceList);\n    }, [id, featureId]);\n\n    return (\n        faceList.length > 0 ?\n        <Row xs={1} md={2} lg={3} style={{ width: '100%' }}>\n            {faceList.map((face, idx) => (\n                <Col\n                    key={idx}\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <FaceCard\n                        onPage={onPage}\n                        data={face}\n                        loggedIn={loggedIn}\n                        deleteThis={() => {\n                            let newList = faceList.slice();\n                            newList.splice(idx, 1);\n                            setFaceList(newList);\n                        }}\n                    />\n                </Col>\n            ))}\n        </Row>\n        :\n        (\n            loggedIn ?\n            <div style={{textAlign: 'center'}}>No Faces Available</div>\n            :\n            <div style={{textAlign: 'center'}}>Log in to see available faces</div>\n        )\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util.js'\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport ClimbCard from '../Card/ClimbCard';\n\nexport default function ClimbList({ loggedIn, faceId, onPage }){\n    const [climbList, setClimbList] = useState([]);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        let path;\n        if(faceId){\n            path = `/faces/${faceId}/climbs`\n        }\n        else if(id){\n            path = `/faces/${id}/climbs`\n        }\n        else{\n            path = 'climbs'\n        }\n\n        fetchFromApi(path, setClimbList);\n    }, [id, faceId]);\n\n    return (\n        climbList.length > 0 ?\n        <Row xs={1} md={2} lg={3} style={{ width: '100%' }}>\n            {climbList.map((climb, idx) => (\n                <Col\n                    key={idx}\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <ClimbCard\n                        onPage={onPage}\n                        data={climb}\n                        loggedIn={loggedIn}\n                        deleteThis={() => {\n                            let newList = climbList.slice();\n                            newList.splice(idx, 1);\n                            setClimbList(newList);\n                        }}\n                    />\n                </Col>\n            ))}\n        </Row>\n        :\n        (\n            loggedIn ?\n            <div style={{textAlign: 'center'}}>No Climbs Available</div>\n            :\n            <div style={{textAlign: 'center'}}>Log in to see available climbs</div>\n        )\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getAuth, apiUrlBase } from '../../util';\n\nimport AreaList from '../List/AreaList';\n\nconst defaultBookObj = {\n    book_name: \"\",\n    book_description: \"\"\n}\n\nconst defaultAuthorObj = {\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\"\n}\n\nconst fetchAuthor = (author_id, setAuthorObj, headers) => {\n    fetch(`${apiUrlBase}/users/${author_id}`, {\n        method: 'GET',\n        headers: headers\n    })\n    .then(res => res.json())\n    .then(data => setAuthorObj(data))\n    .catch(e => console.log(e));\n}\n\nexport default function BookPage({ loggedIn }){\n    const { id } = useParams();\n    const [bookObj, setBookObj] = useState(defaultBookObj);\n    const [authorObj, setAuthorObj] = useState(defaultAuthorObj);\n\n    useEffect(() => {\n        // cant be done with fetchFromApi because of the fetchAuthor call in the last `then`\n        const token = getAuth();\n        const headers = token ? {\n            \"Authorization\": `Token ${token}`\n        } : {};\n\n        fetch(`${apiUrlBase}/books/${id}`, {\n            method: 'GET',\n            headers: headers\n        })\n        .then(res => res.json())\n        .then(data => {\n            setBookObj(data)\n            fetchAuthor(data.author, setAuthorObj, headers);\n        })\n        .catch(e => console.log(e));\n    }, [id])\n\n    return (\n        <div style={{ height: '100%' }}>\n            <div style={{ textAlign: 'center' }}>\n                <h1>{bookObj.book_name}</h1><br/>\n                <h4>by {authorObj.first_name} {authorObj.last_name}</h4><br/>\n                {bookObj.book_description}\n            </div>\n            <AreaList bookId={id} loggedIn={loggedIn} onPage={true}/>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport FeatureList from '../List/FeatureList';\n\nconst defaultAreaObj = {\n    area_name: \"\",\n    area_description: \"\",\n    book: \"\"\n}\n\nexport default function BookPage({ loggedIn }){\n    const { id } = useParams();\n    const [areaObj, setAreaObj] = useState(defaultAreaObj);\n\n    useEffect(() => {\n        fetchFromApi(`/areas/${id}`, setAreaObj);\n    }, [id])\n\n    return (\n        <div style={{ height: '100%' }}>\n            <div style={{ textAlign: 'center' }}>\n                <h1>{areaObj.area_name}</h1><br/>\n                {areaObj.area_description} <br/>\n                <Link to={`/books/${areaObj.book}`}>Guidebook</Link>\n            </div>\n            <FeatureList areaId={id} loggedIn={loggedIn} onPage={true}/>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport FaceList from '../List/FaceList';\n\nconst defaultFeatureObj = {\n    feature_name: \"\",\n    feature_description: \"\"\n}\n\nexport default function BookPage({ loggedIn }){\n    const { id } = useParams();\n    const [featureObj, setFeatureObj] = useState(defaultFeatureObj);\n\n    useEffect(() => {\n        fetchFromApi(`/features/${id}`, setFeatureObj)\n    }, [id])\n\n    return (\n        <div style={{ height: '100%' }}>\n            <div style={{ textAlign: 'center' }}>\n                <h1>{featureObj.feature_name}</h1><br/>\n                {featureObj.feature_description}<br/>\n                <Link to={`/areas/${featureObj.area}`}>Area</Link>\n            </div>\n            <FaceList featureId={id} loggedIn={loggedIn} onPage={true}/>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport ClimbList from '../List/ClimbList';\n\nconst defaultFaceObj = {\n    face_name: \"\",\n    face_description: \"\"\n}\n\nexport default function BookPage({ loggedIn }){\n    const { id } = useParams();\n    const [faceObj, setFaceObj] = useState(defaultFaceObj);\n\n    useEffect(() => {\n        fetchFromApi(`/faces/${id}`, setFaceObj);\n    }, [id])\n\n    return (\n        <div style={{ height: '100%' }}>\n            <div style={{ textAlign: 'center' }}>\n                <h1>{faceObj.face_name}</h1><br/>\n                {faceObj.face_description}<br/>\n                <Link to={`/features/${faceObj.feature}`}>Feature</Link>\n            </div>\n            <ClimbList faceId={id} loggedIn={loggedIn} onPage={true}/>\n        </div>\n    )\n}","import { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport EditPortal from './components/EditPortal';\nimport Layout from './components/Layout';\nimport NotFound from './components/NotFound';\n\n// lists\nimport BookList from './components/List/BookList';\nimport AreaList from './components/List/AreaList';\nimport FeatureList from './components/List/FeatureList';\nimport FaceList from './components/List/FaceList';\nimport ClimbList from './components/List/ClimbList';\n\n// pages\nimport BookPage from './components/Page/BookPage';\nimport AreaPage from './components/Page/AreaPage';\nimport FeaturePage from './components/Page/FeaturePage';\nimport FacePage from './components/Page/FacePage';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState();\n\n  useEffect(() => {\n    setLoggedIn(Object.keys(sessionStorage).indexOf(\"auth_token\") >= 0 || Object.keys(localStorage).indexOf(\"auth_token\") >= 0);\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Layout loggedIn={loggedIn} setLoggedIn={setLoggedIn}>\n        <Routes>\n          <Route exact path=\"/\" element={<Home loggedIn={loggedIn}/>}/>\n\n          <Route exact path=\"/books\" element={<BookList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/areas\" element={<AreaList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/features\" element={<FeatureList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/faces\" element={<FaceList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/climbs\" element={<ClimbList loggedIn={loggedIn}/>}/>\n\n          <Route exact path=\"/books/:id\" element={<BookPage loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/areas/:id\" element={<AreaPage loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/features/:id\" element={<FeaturePage loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/faces/:id\" element={<FacePage loggedIn={loggedIn}/>}/>\n\n          <Route exact path=\"/books/:id/areas\" element={<AreaList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/areas/:id/features\" element={<FeatureList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/features/:id/faces\" element={<FaceList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/faces/:id/climbs\" element={<ClimbList loggedIn={loggedIn}/>}/>\n\n          <Route exact path=\"/signup\" element={<SignUp loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>}/>\n          <Route exact path=\"/login\" element={<Login loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>}/>\n          <Route exact path=\"/create\" element={<EditPortal/>}/>\n\n          <Route exact path=\"*\" element={<NotFound/>}/>\n        </Routes>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}