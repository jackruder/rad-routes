{"version":3,"sources":["util.js","components/Card/ClimbCard.js","components/Home.js","components/SignUp.js","components/Login.js","components/editPortals/selectors/BookSelector.js","components/editPortals/selectors/AreaSelector.js","components/editPortals/selectors/FeatureSelector.js","components/editPortals/selectors/FaceSelector.js","components/editPortals/EditClimb.js","components/editPortals/EditArea.js","components/editPortals/EditFeature.js","components/editPortals/EditFace.js","components/editPortals/EditBook.js","components/EditPortal.js","components/RadNavbar.js","components/Layout.js","components/NotFound.js","components/Card/BookCard.js","components/List/BookList.js","components/Card/AreaCard.js","components/List/AreaList.js","components/Card/FeatureCard.js","components/List/FeatureList.js","components/Card/FaceCard.js","components/List/FaceList.js","components/List/ClimbList.js","components/Page/BookPage.js","components/Page/AreaPage.js","components/Page/FeaturePage.js","components/Page/FacePage.js","App.js","index.js"],"names":["getAuth","Object","keys","localStorage","indexOf","auth_token","sessionStorage","apiUrlBase","window","location","host","formFieldErrorRed","fetchFromApi","path","setter","_path","substring","token","headers","fetch","method","then","res","json","data","console","log","catch","e","getHeightString","height","ft","Math","round","m","navigator","language","toLowerCase","images","Climb","onPage","climbObj","navigate","useNavigate","length","Card","style","width","margin","display","Body","minWidth","lineHeight","Title","climb_name","climb_type","grade","flexGrow","Link","onClick","face","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","marginTop","Text","description","Home","loggedIn","useState","climbs","setClimbs","justifyContent","alignItems","id","textAlign","fontSize","animation","Button","variant","minHeight","placeItems","position","floor","random","color","defaultFormData","username","first_name","last_name","email","password","is_guide","info_private","SignUp","setLoggedIn","formData","setFormData","setUsername","setPassword","passConfirm","setPassConfirm","showPassword","setShowPassword","usernameError","setUsernameError","emailError","setEmailError","passwordError","setPasswordError","firstNameError","setFirstNameError","lastNameError","setLastNameError","errorSetters","top","Form","Group","className","controlId","Label","Control","type","placeholder","onInput","target","value","newData","marginBottom","size","Check","label","checked","disabled","preventDefault","body","JSON","stringify","err","key","prototype","toString","call","setItem","removeItem","Swal","fire","icon","title","text","alert","Login","formDisabled","setFormDisabled","stayLoggedIn","setStayLoggedIn","invalidLogin","setInvalidLogin","Storage","BookSelector","onChange","editableBooks","setEditableAreas","Select","selectorStyle","selectorSize","book","defaultValue","map","i","book_id","book_name","AreaSelector","editableAreas","setEditableFeatures","area","area_id","area_name","FeatureSelector","editableFeatures","setEditableFaces","feature","feature_id","feature_name","FaceSelector","editableFaces","face_id","face_name","EditClimb","setEditableBooks","useEffect","Container","Number","isInteger","parseInt","meters","as","rows","ok","contentType","get","Error","detail","climb_id","area_description","EditArea","nameBg","setNameBg","background","feature_description","gps","EditFeature","EditFace","face_description","book_description","public","listed","grade_hist","EditBook","marginLeft","EditPortal","selectedForm","setForm","renderForm","RadNavbar","Navbar","bg","expand","sticky","maxWidth","fluid","Brand","cursor","Toggle","Collapse","Nav","NavDropdown","menuVariant","item","reload","Layout","children","flexDirection","NotFound","defaultAuthorObj","Book","bookObj","authorObj","setAuthorObj","author","quality_max","BookList","bookList","setBookList","Row","xs","md","lg","idx","Col","AreaCard","areaObj","area_quality","AreaList","bookId","areaList","setAreaList","useParams","Feature","featureObj","areaId","featureList","setFeatureList","faceObj","featureId","faceList","setFaceList","ClimbList","faceId","climbList","setClimbList","climb","defaultBookObj","BookPage","setBookObj","author_id","fetchAuthor","defaultAreaObj","setAreaObj","to","defaultFeatureObj","setFeatureObj","defaultFaceObj","setFaceObj","App","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9efbd287.chunk.js","sourcesContent":["export const getAuth = () => {\n    if(Object.keys(localStorage).indexOf(\"auth_token\") >= 0){\n        return localStorage.auth_token;\n    }\n    if(Object.keys(sessionStorage).indexOf(\"auth_token\") >= 0){\n        return sessionStorage.auth_token;\n    }\n    return null;\n}\n\nexport const apiUrlBase = process.env.NODE_ENV === 'production' ? `http://${window.location.host}/api` : 'http://localhost:8000/api';\n\nexport const formFieldErrorRed = \"#f99\";\n\nexport const fetchFromApi = (path, setter) => {\n    const _path = path[0] === \"/\" ? path.substring(1) : path; \n\n    const token = getAuth();\n    const headers = token ? {\n        \"Authorization\": `Token ${token}`\n    } : {};\n    \n    fetch(`${apiUrlBase}/${_path}`, {\n        method: 'GET',\n        headers: headers\n    })\n    .then(res => res.json())\n    .then(data => {\n        setter(data)\n        console.log(\"received data:\", data);\n    })\n    .catch(e => console.log(e));\n}","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Card from 'react-bootstrap/Card';\n\nconst getHeightString = (height) => {\n  const ft = `${Math.round(height * 3.28084)}ft`;\n  const m = `${height}m`\n  if(navigator.language.toLowerCase() === 'en-us'){\n    return `${ft} (${m})`\n  }\n  else{\n    return `${m} (${ft})`\n  }\n}\n\nconst images = {\n  \"Cartilage\": \"/static/assets/cartilage.png\",\n  \"Jagged Jaw\": \"/static/assets/jagged.jpg\",\n  \"In-N-Out\": \"/static/assets/in-n-out.png\"\n}\n\nexport default function Climb({ data, onPage }) {\n  const climbObj = data;\n  const navigate = useNavigate();\n\n  return (\n    Object.keys(climbObj).length > 1 ?\n    <Card\n      style={{ width: '36rem', margin: 10 }}\n    >\n      <div style={{display: 'flex'}}>\n        <Card.Body style={{ minWidth: '60%', lineHeight: '2rem'}}>\n          <Card.Title>{climbObj.climb_name}</Card.Title>\n          Type: <b>{climbObj.climb_type}</b> <br/>\n          Grade: <b>{climbObj.grade}</b> <br/>\n\n          <div style={{flexGrow: 1}}>Height: <b>{getHeightString(climbObj.height)}</b></div>\n\n          {!onPage ? \n            <>\n              <Card.Link onClick={() => navigate(`/faces/${climbObj.face}`)}>Face</Card.Link><br/>\n            </>\n            : <></>}\n        </Card.Body>\n        <div style={{\n          width: '100%',\n          backgroundImage: `url(${images[climbObj.climb_name]})`,\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center'\n        }}/>\n      </div>\n      <Card.Body>\n          <Card.Title style={{ marginTop: '1rem' }}>Description</Card.Title>\n          <Card.Text> {climbObj.description} </Card.Text>\n          <Card.Title>Getting There</Card.Title>\n          <Card.Text>\n            Vitae alias aperiam. A autem temporibus veritatis minima dolore deserunt.\n          </Card.Text>\n      </Card.Body>\n    </Card> : <>This Climb Does Not Exist</>\n  )\n}","import React, { useState } from 'react';\n\nimport Button from 'react-bootstrap/Button';\n\nimport { fetchFromApi } from '../util';\n\nimport ClimbCard from './Card/ClimbCard';\n\nexport default function Home({ loggedIn }) {\n    const [climbs, setClimbs] = useState(null);\n\n    return (\n        <div style={{\n            display: 'flex',\n            height: '100%',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundImage: \"url(/static/assets/banner-1.jpg)\",\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center'\n        }}>\n            <div style={{ display: 'flex' }}>\n                <div id=\"title\" style={{\n                    textAlign: 'center'\n                }}>\n                    <h1 style={{\n                        fontSize: 72,\n                        animation: '1s ease-out 0s 1 fadeIn'\n                    }}>\n                        \"Rad Route, Dude\"\n                    </h1>\n                    <br/>\n                    <Button\n                        variant=\"dark\"\n                        style={{\n                            animation: '1s ease-out 0s 1 fadeIn'\n                        }}\n                        onClick={() => {\n                            fetchFromApi(\"/climbs\", setClimbs);\n                        }}\n                    >\n                        Random Climb\n                    </Button>\n                </div>\n                <div style={{ minWidth: '40vw', minHeight: '100%', display: 'grid', placeItems: 'center' }}>\n                    <div style={{position: 'absolute'}}>\n                        { climbs !== null ? <>\n                            { climbs.length > 0 ?\n                                <ClimbCard data={climbs[Math.floor(Math.random() * climbs.length)]}/>\n                            : \n                                <div style={{ color: '#fdd' }}>\n                                    {loggedIn ? \"No climbs available :(\" : \"Log in to see available climbs!\"} \n                                </div>\n                            }\n                        </> \n                        :\n                        <></> }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Swal from 'sweetalert2';\n\nimport { apiUrlBase } from '../util';\n\nconst defaultFormData = {\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    is_guide: false,\n    info_private: false\n}\n\nexport default function SignUp({ setLoggedIn }){\n    const [formData, setFormData] = useState(defaultFormData);\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passConfirm, setPassConfirm] = useState(\"\");\n\n    const [showPassword, setShowPassword] = useState(false);\n\n    const [usernameError, setUsernameError] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [firstNameError, setFirstNameError] = useState(\"\");\n    const [lastNameError, setLastNameError] = useState(\"\");\n\n    const navigate = useNavigate();\n\n    const errorSetters = {\n        username: setUsernameError,\n        email: setEmailError,\n        password: setPasswordError,\n        first_name: setFirstNameError,\n        last_name: setLastNameError\n    }\n\n    const formIsDisabled = () => {\n        console.log(\"hello\");\n        return password === \"\" || formData.username === \"\" || formData.email === \"\" || passwordError !== \"\";\n    }\n\n    return(\n        <Card style = {{ margin: 'auto', top: '50px', width: '380px' }}\n            onClick={() => {\n                \n            }}\n        >\n            <div style = {{ display: 'flex' }}>\n            <Card.Body>\n                <Card.Title>Sign Up</Card.Title>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"first_name\">\n                        <Form.Label>Username*</Form.Label>\n                        {usernameError !== \"\" ?\n                        <> <br/>\n                        <Form.Text style={{color: \"#f00\"}}>\n                            {usernameError}\n                        </Form.Text> </>\n                        : <></>}\n                        <Form.Control type=\"text\" placeholder=\"johnsmith42\"\n                            onInput={e => {\n                                setUsername(e.target.value);\n\n                                let newData = formData;\n                                newData.username = e.target.value;\n                                setFormData(newData);\n                            }}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"first_name\">\n                        <Form.Label>First Name</Form.Label>\n                        {firstNameError !== \"\" ?\n                        <> <br/>\n                        <Form.Text style={{color: \"#f00\"}}>\n                            {firstNameError}\n                        </Form.Text> </>\n                        : <></>}\n                        <Form.Control type=\"text\" placeholder=\"John\"\n                            onInput={e => {\n\n                                let newData = formData;\n                                newData.first_name = e.target.value;\n                                setFormData(newData);\n                            }}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"last_name\">\n                        <Form.Label>Last Name</Form.Label>\n                        {lastNameError !== \"\" ?\n                        <> <br/>\n                        <Form.Text style={{color: \"#f00\"}}>\n                            {lastNameError}\n                        </Form.Text> </>\n                        : <></>}\n                        <Form.Control type=\"text\" placeholder=\"Smith\"\n                            onInput={e => {\n                                let newData = formData;\n                                newData.last_name = e.target.value;\n                                setFormData(newData);\n                            }}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\n                        <Form.Label>Email address*</Form.Label>\n                        {emailError !== \"\" ? <><br/>\n                        <Form.Text style={{color: \"#f00\"}}>\n                            {emailError}\n                        </Form.Text></>\n                        : <></>}\n                        <Form.Control type=\"text\" placeholder=\"jsmith@example.com\" \n                            onInput={e => {\n                                let newData = formData;\n                                newData.email = e.target.value;\n                                setFormData(newData);\n                            }}\n                        />\n                        <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"password\">\n                        <Form.Label>Password*</Form.Label>\n                        {passwordError !== \"\" ? <><br/>\n                        <Form.Text style={{color: \"#f00\"}}>\n                            {passwordError}\n                        </Form.Text></>\n                        : <></>}\n                        <Form.Control\n                            type={showPassword ? \"text\" : \"password\"}\n                            placeholder=\"Enter password\"\n                            style={{ marginBottom: '5px' }}\n                            onInput={e => {\n                                setPassword(e.target.value);\n                                if(e.target.value === passConfirm){\n                                    setPasswordError(\"\");\n\n                                    let newData = formData;\n                                    newData.password = password;\n                                    setFormData(newData);\n                                }\n                                else{\n                                    setPasswordError(\"Passwords do not match\");\n                                }\n                            }}\n                        />\n                        <Form.Control\n                            style={{ marginBottom: '5px'}}\n                            type={showPassword ? \"text\" : \"password\"}\n                            placeholder=\"Confirm password\"\n                            onInput={e => {\n                                setPassConfirm(e.target.value);\n                                if(e.target.value === password){\n                                    setPasswordError(\"\");\n\n                                    let newData = formData;\n                                    newData.password = password;\n                                    setFormData(newData);\n                                }\n                                else{\n                                    setPasswordError(\"Passwords do not match\");\n                                }\n                            }}\n                        />\n                        <Button variant=\"light\" size=\"sm\"\n                            onClick={() => {\n                                setShowPassword(!showPassword);\n                            }}\n                        >\n                            {showPassword ? \"Hide Password\" : \"Show Password\"}\n                        </Button>\n                    </Form.Group>\n\n                    <Form.Check \n                        type={'checkbox'}\n                        id={`is_guide`}\n                        label={`I am a guide.`}\n                        onInput={e => {\n                            let newData = formData;\n                            newData.is_guide = e.target.checked;\n                            setFormData(newData);\n                        }}\n                    />\n\n                    <Form.Check\n                        type={'checkbox'}\n                        id={`info_private`}\n                        label={`Keep my info private`}\n                        onInput={e => {\n                            let newData = formData;\n                            newData.info_private = e.target.checked;\n                            setFormData(newData);\n                        }}\n                    />\n                    <br />\n\n                    <Button\n                        variant=\"primary\"\n                        type=\"submit\"\n                        disabled={formIsDisabled()}\n                        onClick={e => {\n                            e.preventDefault();\n\n                            fetch(`${apiUrlBase}/users/`, {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json'\n                                },\n                                body: JSON.stringify(formData)\n                            })\n                            .then(res => res.json())\n                            .then(data => {\n                                console.log(data);\n                                let err = false;\n                                for(let key of Object.keys(formData)){\n                                    if(Object.keys(data).indexOf(key) >= 0){\n                                        if(Object.prototype.toString.call(data[key]) === \"[object Array]\"){\n                                            err = true;\n                                            errorSetters[key](data[key][0]);\n                                        }\n                                    }\n                                    else if (Object.keys(errorSetters).indexOf(key) >= 0){\n                                        errorSetters[key](\"\");\n                                    }\n                                }\n                                if(!err){\n                                    for(let key of Object.keys(errorSetters)){\n                                        errorSetters[key](false);\n                                    }\n\n                                    //BEGIN LOGIN\n                                    console.log(\"fetching authorization\");\n                                    fetch(`${apiUrlBase}/authorization/`, {\n                                        method: 'POST',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                        },\n                                        body: JSON.stringify({ username, password })\n                                    })\n                                    .then(res => res.json())\n                                    .then(data => {\n\n                                        try{\n                                            sessionStorage.setItem(\"auth_token\", data.token);\n                                            localStorage.removeItem(\"auth_token\");\n                                            localStorage.setItem(\"username\", username);\n\n                                            setLoggedIn(true);\n\n                                            Swal.fire({\n                                                icon: 'success',\n                                                title: 'Account Created',\n                                                text: `Welcome to Rad Routes, ${formData.first_name} 🧗`\n                                            }).then(navigate(\"/books\"));\n\n                                        }\n                                        catch(e){\n                                            console.log(e);\n                                            alert(\"Unknown error\");\n                                        }\n                                        \n                                    })\n                                    .catch(err => console.log(err));\n\n                                    //END LOGIN\n\n                                }\n                            })\n                            .catch(e => {\n                                console.log(e);\n                            });\n                        }}\n                    >\n                        Submit\n                    </Button>\n                    <br/><br/>\n                    <Form.Text className=\"text-muted\">\n                        * required\n                    </Form.Text>\n                </Form>\n            </Card.Body>\n            </div>\n        </Card>\n    )\n}","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Swal from 'sweetalert2';\n\nimport { apiUrlBase } from '../util';\n\nexport default function Login({ setLoggedIn }){\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [showPassword, setShowPassword] = useState(false);\n\n    const [formDisabled, setFormDisabled] = useState(true);\n    const [stayLoggedIn, setStayLoggedIn] = useState(false);\n    const [invalidLogin, setInvalidLogin] = useState(false);\n\n    const navigate = useNavigate();\n\n    return(\n        <>\n        { typeof(Storage) !== 'undefined' ?\n            <Card\n                style={{   margin: 'auto', top: '50px', width: '25%' }}\n            >\n                <Card.Body>\n                    <Card.Title>Login</Card.Title>\n\n                    {invalidLogin ?\n                    <Form.Text style={{color: \"#f00\"}}>\n                        Username or password is incorrect.\n                    </Form.Text>\n                    : <></>}\n                    \n                    <Form>\n\n                        <Form.Group className=\"mb-3\" controlId=\"username\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"johnsmith42\" \n                                onInput={e => {\n                                    setFormDisabled(password === \"\" || e.target.value === \"\");\n                                    setUsername(e.target.value);\n                                }}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            \n                            <Form.Control type={showPassword ? \"text\" : \"password\"} placeholder=\"Enter password\"  \n                                onInput={e => {\n                                    setFormDisabled(username === \"\" || e.target.value === \"\");\n                                    setPassword(e.target.value);\n                                }}\n                            />\n                        </Form.Group>\n                        \n                        <Button variant=\"light\" size=\"sm\"\n                            onClick={() => {\n                                setShowPassword(!showPassword);\n                            }}\n                        >\n                            {showPassword ? \"Hide Password\" : \"Show Password\"}\n                        </Button>\n                        <br/><br/>\n\n                        <Form.Check \n                            type={'checkbox'}\n                            id={`remember`}\n                            label={`Keep me signed in on this device.`}\n                            onClick={e => {\n                                setStayLoggedIn(e.target.checked);\n                            }}\n                        />\n                        <br/>\n\n                        <Button variant=\"primary\" type=\"submit\"\n                            disabled={formDisabled}\n                            onClick={e => {\n                                e.preventDefault();\n\n                                fetch(`${apiUrlBase}/authorization/`, {\n                                    method: 'POST',\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ username, password })\n                                })\n                                .then(res => res.json())\n                                .then(data => {\n                                    // check for invalid credentials\n                                    if(Object.keys(data).length === 1 && Object.keys(data).indexOf('non_field_errors') >= 0){\n                                        setInvalidLogin(true);\n                                    }\n                                    else{\n                                        setInvalidLogin(false);\n                                        try{\n                                            if(stayLoggedIn){\n                                                localStorage.setItem(\"auth_token\", data.token);\n                                            }\n                                            else{\n                                                sessionStorage.setItem(\"auth_token\", data.token);\n                                                localStorage.removeItem(\"auth_token\");\n                                            }\n                                            localStorage.setItem(\"username\", username);\n                                            \n                                            setLoggedIn(true);\n\n                                            Swal.fire({\n                                                icon: 'success',\n                                                title: 'Welcome',\n                                                text: 'Good to see you again'\n                                            }).then(navigate(\"/climbs\"));\n                                        }\n                                        catch(e){\n                                            console.log(e);\n                                            alert(\"Unknown error\");\n                                        }\n                                    }\n                                })\n                                .catch(err => console.log(err));\n                            }}\n                        >\n                            Login\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n            :\n            <div style={{textAlign: 'center'}}>\n                Your browser does not support web storage. This means your credentials cannot be stored. <br/>\n                You are still free to browse public guidebooks on RadRoutes!\n            </div>\n        }\n        </>\n    )\n}","import React from \"react\";\n\nimport { fetchFromApi } from \"../../../util\";\nimport { selectorSize, selectorStyle } from \"../../EditPortal\";\n\nimport Form from 'react-bootstrap/Form';\n\nexport default function BookSelector({ onChange, formData, setFormData, editableBooks, setEditableAreas }){\n    return (\n        <Form.Group className=\"mb-3\">\n            <Form.Label>Book*</Form.Label>\n            <Form.Select\n                style={selectorStyle}\n                size={selectorSize}\n                onChange={e => {\n                    if(formData){\n                        let newData = formData;\n                        newData.book = e.target.value;\n                        setFormData(newData);\n                    }\n\n                    if(setEditableAreas){\n                        fetchFromApi(`/books/${e.target.value}/areas`, setEditableAreas);\n                    }\n\n                    if (typeof onChange === 'function'){\n                        onChange();\n                    }\n                }}\n                defaultValue={\"default\"}\n            >\n                <option disabled value=\"default\">-- select book --</option>\n                {editableBooks.map((book, i) => (\n                    <option key={i} value={book.book_id}>{book.book_name}</option>\n                ))}\n            </Form.Select>\n        </Form.Group>\n    )\n}","import React from 'react';\n\nimport { fetchFromApi } from '../../../util';\nimport { selectorSize, selectorStyle } from '../../EditPortal';\n\nimport Form from 'react-bootstrap/Form';\n\nexport default function AreaSelector({ onChange, formData, setFormData, editableAreas, setEditableFeatures }){\n    return (\n        editableAreas ? <>\n            { editableAreas.length > 0 ?\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Area*</Form.Label>\n                <Form.Select\n                    style={selectorStyle}\n                    size={selectorSize}\n                    onChange={e => {\n                        if(formData){\n                            let newData = formData;\n                            newData.area = e.target.value;\n                            setFormData(newData);\n                        }\n                        \n                        if(setEditableFeatures){\n                            fetchFromApi(`/areas/${e.target.value}/features`, setEditableFeatures);\n                        }\n\n                        if (typeof onChange === 'function'){\n                            onChange();\n                        }\n                    }}\n                    defaultValue={\"default\"}\n                >\n                    <option disabled value=\"default\">-- select area --</option>\n                    {editableAreas.map((area, i) => (\n                        <option key={i} value={area.area_id}>{area.area_name}</option>\n                    ))}\n                </Form.Select>\n            </Form.Group>\n            : <>This book doesn't have any areas yet!</>}\n        </>\n        :\n        <></>\n    )\n}","import React from 'react';\n\nimport { fetchFromApi } from '../../../util';\nimport { selectorSize, selectorStyle } from '../../EditPortal';\n\nimport Form from 'react-bootstrap/Form';\n\nexport default function FeatureSelector({ onChange, formData, setFormData, editableFeatures, setEditableFaces }){\n    return (\n        editableFeatures ? <>\n            { editableFeatures.length > 0 ?\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Feature*</Form.Label>\n                <Form.Select\n                    style={selectorStyle}\n                    size={selectorSize}\n                    onChange={e => {\n                        if(formData){\n                            let newData = formData;\n                            newData.feature = e.target.value;\n                            setFormData(newData);\n                        }\n                        \n                        if(setEditableFaces){\n                            fetchFromApi(`/features/${e.target.value}/faces`, setEditableFaces);\n                        }\n\n                        if (typeof onChange === 'function'){\n                            onChange();\n                        }\n                    }}\n                    defaultValue={\"default\"}\n                >\n                    <option disabled value=\"default\">-- select feature --</option>\n                    {editableFeatures.map((feature, i) => (\n                        <option key={i} value={feature.feature_id}>{feature.feature_name}</option>\n                    ))}\n                </Form.Select>\n            </Form.Group>\n            : <>This area doesn't have any features yet!</>}\n        </>\n        :\n        <></>\n    )\n}","import React from 'react';\n\nimport { selectorSize, selectorStyle } from '../../EditPortal';\n\nimport Form from 'react-bootstrap/Form';\n\nexport default function FaceSelector({ onChange, formData, setFormData, editableFaces }){\n    return (\n        editableFaces ? <>\n            { editableFaces.length > 0 ?\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Face*</Form.Label>\n                <Form.Select\n                    style={selectorStyle}\n                    size={selectorSize}\n                    onChange={e => {\n                        if(formData){\n                            let newData = formData;\n                            newData.face = e.target.value;\n                            setFormData(newData);\n                        }\n\n                        if (typeof onChange === 'function'){\n                            onChange();\n                        }\n                    }}\n                    defaultValue={\"default\"}\n                >\n                    <option disabled value=\"default\">-- select face --</option>\n                    {editableFaces.map((face, i) => (\n                        <option key={i} value={face.face_id}>{face.face_name}</option>\n                    ))}\n                </Form.Select>\n            </Form.Group>\n            : <>This feature doesn't have any faces yet!</>}\n        </>\n        :\n        <></>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Swal from 'sweetalert2';\n\nimport BookSelector from './selectors/BookSelector';\nimport AreaSelector from './selectors/AreaSelector';\nimport FeatureSelector from './selectors/FeatureSelector';\nimport FaceSelector from './selectors/FaceSelector';\n\nimport { fetchFromApi, getAuth, apiUrlBase } from '../../util';\n\nconst defaultFormData = {\n    climb_name: null,\n    climb_type: null,\n    face_id: null, //TODO\n    grade: null,\n    height: null,\n    description: null,\n}\n\nexport default function EditClimb(){\n    const [formData, setFormData] = useState(defaultFormData);\n\n    const [editableBooks, setEditableBooks] = useState(null);\n    const [editableAreas, setEditableAreas] = useState(null);\n    const [editableFeatures, setEditableFeatures] = useState(null);\n    const [editableFaces, setEditableFaces] = useState(null);\n\n    const [formDisabled, setFormDisabled] = useState(true);\n\n    useEffect(() => {\n        fetchFromApi(`/owned/`, setEditableBooks);\n    }, [])\n\n    return (\n        editableBooks ?\n        <>\n        { editableBooks.length > 0 ?\n        <Container>\n            <Form style={{ margin: 'auto'}}>\n                <BookSelector editableBooks={editableBooks} setEditableAreas={setEditableAreas} />\n                \n                <AreaSelector editableAreas={editableAreas} setEditableFeatures={setEditableFeatures} />\n\n                <FeatureSelector editableFeatures={editableFeatures} setEditableFaces={setEditableFaces} />\n\n                <FaceSelector onChange={() => setFormDisabled(false)} formData={formData} setFormData={setFormData} editableFaces={editableFaces} />\n\n                <Form.Group className=\"mb-3\" controlId=\"climb_name\">\n                    <Form.Label>Climb Name*</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.climb_name = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"climb_type\">\n                    <Form.Label>Climb Type</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.climb_type = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"grade\">\n                    <Form.Label>Grade</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.grade = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"height\">\n                    <Form.Label>Height {navigator.language.toLowerCase() === 'en-us' ? '(ft)' : '(m)'}</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            if((Number.isInteger(parseInt(e.target.value))) || (e.target.value === \"\")){\n                                let newData = formData;\n                                let meters = parseInt(e.target.value);\n                                newData.height = navigator.language.toLowerCase() === 'en-us' ? Math.round(meters / 3.28084) : meters;\n                                setFormData(newData);\n                            }\n                            else{\n                                Swal.fire({\n                                    icon: 'error',\n                                    title: 'Height must be a number',\n                                    text: `Please Try Again.`\n                                });\n                                e.target.value = \"\";\n                            }\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} \n                        onInput={e => {\n                            let newData = formData;\n                            newData.description = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                    <Form.Label>Climb Image</Form.Label>\n                    <Form.Control type=\"file\" />\n                </Form.Group>\n\n                <Button \n                    variant=\"primary\" \n                    type=\"submit\"\n                    disabled={formDisabled}\n                    onClick={e => {\n                        e.preventDefault();\n\n                        const token = getAuth();\n                        let headers = {\n                            'Content-Type': 'application/json'\n                        }\n                        if(token){\n                            headers['Authorization'] = `Token ${token}`;\n                        }\n\n                        fetch(`${apiUrlBase}/climbs/`, {\n                            method: 'POST',\n                            headers: headers,\n                            body: JSON.stringify(formData)\n                        })\n                        .then(res => {\n                            if(res.ok){\n                                return res.json();\n                            }\n                            const contentType = res.headers.get(\"content-type\");\n                            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n                                return res.json().then(data => {\n                                    if(Object.keys(data).indexOf('detail') >= 0){\n                                        throw Error(data.detail);\n                                    }\n                                    else{\n                                        let err;\n                                        try{\n                                            err = JSON.stringify(data);\n                                        }\n                                        catch(e){\n                                            throw Error(\"unknown error\");\n                                        }\n                                        throw Error(err);\n                                    }\n                                });\n                            }\n                        })\n                        .then(data => {\n                            console.log(data);\n                            \n                            if(Object.keys(data).indexOf('detail') >= 0){\n                                Swal.fire({\n                                    icon: 'error',\n                                    text: data.detail\n                                });\n                            }\n                            else {\n                                Swal.fire({\n                                    icon: 'success',\n                                    title: 'Climb Created',\n                                    text: `Successfully created climb ${formData.climb_name} (id ${data.climb_id})`\n                                });\n                            }\n                        })\n                        .catch(e => {\n                            console.log(e);\n                            Swal.fire({\n                                icon: 'error',\n                                text: e\n                            })\n                        });\n                    }}\n                >\n                    Save Changes\n                </Button>\n            </Form>\n        </Container>\n        : <>Nothing available</>}\n        </>\n        : \n        <></>\n    )\n}","import React, { useEffect, useState } from 'react';\n\nimport { getAuth, fetchFromApi, formFieldErrorRed } from '../../util';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Swal from 'sweetalert2';\n\nimport BookSelector from './selectors/BookSelector';\n\nimport { apiUrlBase } from '../../util';\n\nconst defaultFormData = {\n    book: null,\n    area_name: null,\n    area_description: null\n}\n\nexport default function EditArea(){\n    const [formData, setFormData] = useState(defaultFormData);\n    const [editableBooks, setEditableBooks] = useState(null);\n\n    const [nameBg, setNameBg] = useState(null);\n\n    const [formDisabled, setFormDisabled] = useState(true);\n\n    useEffect(() => {\n        fetchFromApi(\"/owned/\", setEditableBooks);\n    }, [])\n\n    return (\n        editableBooks ?\n        <>\n            {editableBooks.length > 0 ?\n            <Container>\n                <Form style={{ margin: 'auto'}}>\n                    <BookSelector onChange={() => setFormDisabled(false)} formData={formData} setFormData={setFormData} editableBooks={editableBooks} />\n\n                    <Form.Group className=\"mb-3\" controlId=\"area\">\n                        <Form.Label>Area Name*</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"\"\n                            style={{\n                                background: nameBg\n                            }}\n                            onInput={e => {\n                                if(e.target.value === \"\"){\n                                    setNameBg(formFieldErrorRed);\n                                    setFormDisabled(true);\n                                }\n                                else{\n                                    setNameBg(null);\n                                    let newData = formData;\n                                    newData.area_name = e.target.value;\n                                    setFormData(newData);\n                                    setFormDisabled(false);\n                                }\n                            }}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3}\n                            onInput={e => {\n                                let newData = formData;\n                                newData.area_description = e.target.value;\n                                setFormData(newData);\n                            }}\n                        />\n                    </Form.Group>\n\n                    <Button \n                        variant=\"primary\" \n                        type=\"submit\"\n                        disabled={formDisabled}\n                        onClick={e => {\n                            e.preventDefault();\n\n                            console.log(formData);\n\n                            if(formData.area_name === null){\n                                setNameBg(formFieldErrorRed);\n                                return;\n                            }\n\n                            const token = getAuth();\n                            let headers = {\n                                'Content-Type': 'application/json'\n                            }\n                            if(token){\n                                headers['Authorization'] = `Token ${token}`;\n                            }\n\n                            fetch(`${apiUrlBase}/areas/`, {\n                                method: 'POST',\n                                headers: headers,\n                                body: JSON.stringify(formData)\n                            })\n                            .then(res => {\n                                if(res.ok){\n                                    return res.json();\n                                }\n                                const contentType = res.headers.get(\"content-type\");\n                                if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n                                    return res.json().then(data => {\n                                        if(Object.keys(data).indexOf('detail') >= 0){\n                                            throw Error(data.detail);\n                                        }\n                                        else{\n                                            let err;\n                                            try{\n                                                err = JSON.stringify(data);\n                                            }\n                                            catch(e){\n                                                throw Error(\"unknown error\");\n                                            }\n                                            throw Error(err);\n                                        }\n                                    });\n                                }\n                            })\n                            .then(data => {\n                                console.log(data);\n                                \n                                if(Object.keys(data).indexOf('detail') >= 0){\n                                    Swal.fire({\n                                        icon: 'error',\n                                        text: data.detail\n                                    });\n                                }\n                                else {\n                                    Swal.fire({\n                                        icon: 'success',\n                                        title: 'Area Created',\n                                        text: `Successfully created area ${formData.area_name}`\n                                    });\n                                }\n                            })\n                            .catch(e => {\n                                console.log(e);\n                                Swal.fire({\n                                    icon: 'error',\n                                    text: e\n                                })\n                            });\n                        }}\n                    >\n                        Save Changes\n                    </Button>\n                </Form>\n            </Container>\n            :\n            <>You don't have any books yet!</>}\n        </>\n        :\n        <></>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Swal from 'sweetalert2';\n\nimport { fetchFromApi, getAuth, apiUrlBase } from '../../util';\n\nimport BookSelector from './selectors/BookSelector';\nimport AreaSelector from './selectors/AreaSelector';\n\nconst defaultFormData = {\n    feature_name: null,\n    feature_description: null,\n    gps: null,\n    location: null,\n    area: null\n}\n\nexport default function EditFeature(){\n    const [formData, setFormData] = useState(defaultFormData);\n\n    const [editableBooks, setEditableBooks] = useState(null);\n    const [editableAreas, setEditableAreas] = useState(null);\n\n    const [formDisabled, setFormDisabled] = useState(true);\n\n    useEffect(() => {\n        fetchFromApi(\"/owned/\", setEditableBooks);\n    }, []);\n\n    return (\n        editableBooks ?\n        <>\n        { editableBooks.length > 0 ?\n        <Container>\n            <Form style={{ margin: 'auto'}}>\n                <BookSelector setEditableAreas={setEditableAreas} editableBooks={editableBooks} />\n\n                <AreaSelector onChange={() => setFormDisabled(false)} formData={formData} setFormData={setFormData} editableAreas={editableAreas} />\n\n                <Form.Group className=\"mb-3\" controlId=\"feature_name\">\n                    <Form.Label>Feature Name*</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.feature_name = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"feature_description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} \n                        onInput={e => {\n                            let newData = formData;\n                            newData.feature_description = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"gps\">\n                    <Form.Label>GPS</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.gps = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"location\">\n                    <Form.Label>Location</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} \n                        onInput={e => {\n                            let newData = formData;\n                            newData.location = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Button \n                    variant=\"primary\" \n                    type=\"submit\"\n                    disabled={formDisabled}\n                    onClick={e => {\n                        e.preventDefault();\n\n                        const token = getAuth();\n                        let headers = {\n                            'Content-Type': 'application/json'\n                        }\n                        if(token){\n                            headers['Authorization'] = `Token ${token}`;\n                        }\n\n                        fetch(`${apiUrlBase}/features/`, {\n                            method: 'POST',\n                            headers: headers,\n                            body: JSON.stringify(formData)\n                        })\n                        .then(res => {\n                            if(res.ok){\n                                return res.json();\n                            }\n                            const contentType = res.headers.get(\"content-type\");\n                            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n                                return res.json().then(data => {\n                                    if(Object.keys(data).indexOf('detail') >= 0){\n                                        throw Error(data.detail);\n                                    }\n                                    else{\n                                        let err;\n                                        try{\n                                            err = JSON.stringify(data);\n                                        }\n                                        catch(e){\n                                            throw Error(\"unknown error\");\n                                        }\n                                        throw Error(err);\n                                    }\n                                });\n                            }\n                        })\n                        .then(data => {\n                            console.log(data);\n                            \n                            if(Object.keys(data).indexOf('detail') >= 0){\n                                Swal.fire({\n                                    icon: 'error',\n                                    text: data.detail\n                                });\n                            }\n                            else {\n                                Swal.fire({\n                                    icon: 'success',\n                                    title: 'Feature Created',\n                                    text: `Successfully created feature ${formData.feature_name} (id ${data.feature_id})`\n                                });\n                            }\n                        })\n                        .catch(e => {\n                            console.log(e);\n                            Swal.fire({\n                                icon: 'error',\n                                text: e\n                            })\n                        });\n                    }}\n                >\n                    Save Changes\n                </Button>\n            </Form>\n        </Container>\n        : <>Nothing available</>}\n        </>\n        : \n        <></>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Swal from 'sweetalert2';\n\nimport BookSelector from './selectors/BookSelector';\nimport AreaSelector from './selectors/AreaSelector';\nimport FeatureSelector from './selectors/FeatureSelector';\nimport { getAuth, fetchFromApi, apiUrlBase } from '../../util';\n\nconst defaultFormData = {\n    face_name: null,\n    description: null,\n    feature_id: null\n}\n\nexport default function EditFace(){\n    const [formData, setFormData] = useState(defaultFormData);\n\n    const [editableBooks, setEditableBooks] = useState(null);\n    const [editableAreas, setEditableAreas] = useState(null);\n    const [editableFeatures, setEditableFeatures] = useState(null);\n\n    const [formDisabled, setFormDisabled] = useState(true);\n\n    useEffect(() => {\n        fetchFromApi(`/owned/`, setEditableBooks);\n    }, [])\n\n    return (\n        editableBooks ?\n        <>\n        { editableBooks.length > 0 ?\n        <Container>\n            <Form style={{ margin: 'auto'}}>\n                <BookSelector editableBooks={editableBooks} setEditableAreas={setEditableAreas} />\n                \n                <AreaSelector editableAreas={editableAreas} setEditableFeatures={setEditableFeatures} />\n\n                <FeatureSelector onChange={() => setFormDisabled(false)} formData={formData} setFormData={setFormData} editableFeatures={editableFeatures} />\n\n                <Form.Group className=\"mb-3\" controlId=\"face_name\">\n                    <Form.Label>Face Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.face_name = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"face_description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} \n                        onInput={e => {\n                            let newData = formData;\n                            newData.face_description = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"image\" className=\"mb-3\">\n                    <Form.Label>Face Image</Form.Label>\n                    <Form.Control type=\"file\" />\n                </Form.Group>\n\n                <Button \n                    variant=\"primary\" \n                    type=\"submit\"\n                    disabled={formDisabled}\n                    onClick={e => {\n                        e.preventDefault();\n\n                        const token = getAuth();\n                        let headers = {\n                            'Content-Type': 'application/json'\n                        }\n                        if(token){\n                            headers['Authorization'] = `Token ${token}`;\n                        }\n\n                        fetch(`${apiUrlBase}/faces/`, {\n                            method: 'POST',\n                            headers: headers,\n                            body: JSON.stringify(formData)\n                        })\n                        .then(res => {\n                            if(res.ok){\n                                return res.json();\n                            }\n                            const contentType = res.headers.get(\"content-type\");\n                            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n                                return res.json().then(data => {\n                                    if(Object.keys(data).indexOf('detail') >= 0){\n                                        throw Error(data.detail);\n                                    }\n                                    else{\n                                        let err;\n                                        try{\n                                            err = JSON.stringify(data);\n                                        }\n                                        catch(e){\n                                            throw Error(\"unknown error\");\n                                        }\n                                        throw Error(err);\n                                    }\n                                });\n                            }\n                        })\n                        .then(data => {\n                            console.log(data);\n                            \n                            if(Object.keys(data).indexOf('detail') >= 0){\n                                Swal.fire({\n                                    icon: 'error',\n                                    text: data.detail\n                                });\n                            }\n                            else {\n                                Swal.fire({\n                                    icon: 'success',\n                                    title: 'Face Created',\n                                    text: `Successfully created face ${formData.face_name} (id ${data.face_id})`\n                                });\n                            }\n                        })\n                        .catch(e => {\n                            console.log(e);\n                            Swal.fire({\n                                icon: 'error',\n                                text: e\n                            })\n                        });\n                    }}\n                >\n                    Save Changes\n                </Button>\n            </Form>\n        </Container>\n        : <>Nothing available</>}\n        </>\n        : \n        <></>\n    )\n}","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Swal from 'sweetalert2';\nimport { getAuth, apiUrlBase } from '../../util';\n\nconst defaultFormData = {\n    book_name: null,\n    book_description: null,\n    public: false,\n    listed: false,\n    grade_hist: \"1, 4, 3\",\n}\n\nexport default function EditBook(){\n    const [formData, setFormData] = useState(defaultFormData);\n\n    return (\n        <Container>\n            <Form style={{ margin: 'auto'}}>\n                <Form.Group className=\"mb-3\" controlId=\"area\">\n                    <Form.Label>Book Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" \n                        onInput={e => {\n                            let newData = formData;\n                            newData.book_name = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"book_description\">\n                    <Form.Label>Book Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} \n                        onInput={e => {\n                            let newData = formData;\n                            newData.book_description = e.target.value;\n                            setFormData(newData);\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Check \n                    type={'checkbox'}\n                    id={`public`}\n                    label={`Public`}\n                    onInput={e => {\n                        let newData = formData;\n                        newData.public = e.target.checked;\n                        setFormData(newData);\n                    }}\n                />\n\n                <Form.Check \n                    type={'checkbox'}\n                    id={`listed`}\n                    label={`Listed`}\n                    onInput={e => {\n                        let newData = formData;\n                        newData.listed = e.target.checked;\n                        setFormData(newData);\n                    }}\n                />\n\n                <br />\n\n                <Button \n                    variant=\"primary\" \n                    type=\"submit\"\n                    onClick={e => {\n                        e.preventDefault();\n\n                        const token = getAuth();\n                        let headers = {\n                            'Content-Type': 'application/json'\n                        }\n                        if(token){\n                            headers['Authorization'] = `Token ${token}`;\n                        }\n\n                        fetch(`${apiUrlBase}/books/`, {\n                            method: 'POST',\n                            headers: headers,\n                            body: JSON.stringify(formData)\n                        })\n                        .then(res => {\n                            if(res.ok){\n                                return res.json();\n                            }\n                            const contentType = res.headers.get(\"content-type\");\n                            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n                                return res.json().then(data => {\n                                    if(Object.keys(data).indexOf('detail') >= 0){\n                                        throw Error(data.detail);\n                                    }\n                                    else{\n                                        let err;\n                                        try{\n                                            err = JSON.stringify(data);\n                                        }\n                                        catch(e){\n                                            throw Error(\"unknown error\");\n                                        }\n                                        throw Error(err);\n\n                                    }\n                                });\n                            }\n                        })\n                        .then(data => {\n                            console.log(data);\n\n                            if(Object.keys(data).indexOf('detail') >= 0){\n                                Swal.fire({\n                                    icon: 'error',\n                                    text: data.detail\n                                });\n                            }\n                            else {\n                                Swal.fire({\n                                    icon: 'success',\n                                    title: 'Book Created',\n                                    text: `Successfully created book ${formData.book_name}`\n                                });\n                            }\n                        })\n                        .catch(e => {\n                            console.log(e);\n                            Swal.fire({\n                                icon: 'error',\n                                text: e\n                            })\n                        });\n                    }}\n                >\n                    Save Changes\n                </Button>\n            </Form>\n        </Container>\n    )\n}","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\n\nimport EditClimb from './editPortals/EditClimb.js';\nimport EditArea from './editPortals/EditArea.js';\nimport EditFeature from './editPortals/EditFeature.js';\nimport EditFace from './editPortals/EditFace.js';\nimport EditBook from './editPortals/EditBook.js';\n\nexport const selectorStyle = {\n    marginLeft: 20,\n    width: 'clamp(200px, 25%, 400px)',\n}\n\nexport const selectorSize = \"md\";\n\nexport default function EditPortal(){\n\n    const [selectedForm, setForm] = useState('Book');\n\n    const renderForm = () => {\n        switch(selectedForm) {\n            case 'Climb': \n                return <EditClimb />;\n          \n            case 'Area': \n                return <EditArea />;\n    \n            case 'Feature': \n                return <EditFeature />;\n    \n            case 'Face': \n                return <EditFace />;\n\n            case 'Book': \n                return <EditBook />;\n    \n            default: \n                return null;\n          \n        }\n    }\n\n    return(\n        <Card\n            style={{   margin: 'auto', top: '50px', width: '50%' }}\n        >\n        \n            <Card.Body>\n                <div style={{ display: 'flex' }}>\n                    <Card.Title style={{ lineHeight: 2 }}>Create a new</Card.Title>\n\n                    <Form.Select\n                        style={{\n                            marginLeft: 20,\n                            width: 'clamp(200px, 25%, 400px)',\n                        }}\n                        size=\"lg\"\n                        onChange={e => {\n                            setForm(e.target.value);\n                        }}\n                    >\n                        <option value=\"Book\">Book</option>\n                        <option value=\"Area\">Area</option>\n                        <option value=\"Feature\">Feature</option>\n                        <option value=\"Face\">Face</option>\n                        <option value=\"Climb\">Climb</option>\n\n                    </Form.Select>\n                </div>\n\n                <br />\n\n                {renderForm()}\n\n            </Card.Body>\n        </Card>\n    )\n}","import React, { useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nexport default function RadNavbar({ loggedIn, setLoggedIn }) {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setLoggedIn(Object.keys(sessionStorage).indexOf(\"auth_token\") >= 0 || Object.keys(localStorage).indexOf(\"auth_token\") >= 0);\n  }, [setLoggedIn]);\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" sticky=\"top\" style={{ minWidth: '100vw', maxWidth: '100vw' }}>\n      <Container fluid>\n        <Navbar.Brand\n          style={{cursor: \"pointer\"}}\n          onClick={() => navigate(\"/\")}\n        >\n          Rad Routes\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link onClick={() => navigate(\"/books\")}>Guidebooks</Nav.Link>\n            <Nav.Link onClick={() => navigate(\"/areas\")}>Areas</Nav.Link>\n            <Nav.Link onClick={() => navigate(\"/features\")}>Features</Nav.Link>\n            <Nav.Link onClick={() => navigate(\"/faces\")}>Faces</Nav.Link>\n            <Nav.Link onClick={() => navigate(\"/climbs\")}>Climbs</Nav.Link>\n            {\n              loggedIn ?\n              <Nav.Link onClick={() => navigate(\"/create\")}>Create</Nav.Link>\n              :\n              <></>\n            }\n          </Nav>\n          <Nav className=\"justify-content-end\" style={{width: '100%'}}>\n            { \n              !loggedIn ? <>\n                <Nav.Link onClick={() => navigate(\"/signup\")}>Sign Up</Nav.Link>\n                <Nav.Link onClick={() => navigate(\"/login\")}>Login</Nav.Link>\n              </>\n              :\n              <NavDropdown menuVariant=\"dark\" title={localStorage.username} id=\"user-dropdown\">\n                <Nav.Link\n                  onClick={() => {\n                    for(let item of [\"username\", \"auth_token\"]){\n                      localStorage.removeItem(item);\n                      sessionStorage.removeItem(item);\n                    }\n                    setLoggedIn(false);\n                    navigate(\"/\");\n                    window.location.reload();\n                  }}\n                >\n                  Logout\n                </Nav.Link>\n              </NavDropdown>\n            }\n            <div style={{minWidth: 100}}></div>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import React from 'react';\nimport RadNavbar from './RadNavbar';\n\nexport default function Layout({ children, loggedIn, setLoggedIn }){\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', height: '100vh'}}>\n            {/* side drawer */}\n            <RadNavbar loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>\n\n            <div style={{flexGrow: 1}}>\n                {children}\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Button from 'react-bootstrap/Button';\n\nexport default function NotFound(){\n    const navigate = useNavigate();\n\n    return (\n        <div style={{ \n            height: '100%',\n            display: 'grid', \n            placeItems: 'center',\n            fontSize: 48 \n        }}>\n            <div style={{\n                textAlign:'center'\n            }}>\n                404: page not found <br/>\n                <Button\n                    variant=\"dark\"\n                    onClick={() => {\n                        navigate(\"/books\"); \n                    }}\n                >\n                    Explore Guidebooks</Button>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport Card from 'react-bootstrap/Card';\n\nconst defaultAuthorObj = {\n  username: \"\",\n  first_name: \"\",\n  last_name: \"\"\n}\n\nexport default function Book({ data }) {\n  const bookObj = data;\n  const navigate = useNavigate();\n  const [authorObj, setAuthorObj] = useState(defaultAuthorObj);\n\n  useEffect(() => {\n    fetchFromApi(`/users/${data.author}`, setAuthorObj);\n  }, [data])\n\n  return (\n    !bookObj || Object.keys(bookObj).length > 1 ?\n    <Card\n      style={{ \n        width: '36rem',\n        margin: 10,\n        cursor: 'pointer'\n      }}\n      onClick={() => {\n        console.log(bookObj);\n        navigate(`/books/${bookObj.book_id}`);\n      }}\n    >\n        <Card.Body style={{ minWidth: '60%', lineHeight: '2rem'}}>\n          <Card.Title>{bookObj.book_name}</Card.Title>\n          <Card.Text style={{ marginTop: '1rem' }}>{bookObj.book_description}</Card.Text>\n          Best Quality: <b>{bookObj.quality_max}</b> <br/>\n          <Card.Text>by {authorObj.username}</Card.Text>\n        </Card.Body>\n    </Card> : <>This Climb Does Not Exist</>\n  )\n}","import React, { useEffect, useState } from 'react';\n\nimport { fetchFromApi } from '../../util';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport BookCard from '../Card/BookCard';\n\nexport default function BookList({ loggedIn }){\n    const [bookList, setBookList] = useState([]);\n\n    useEffect(() => {\n        fetchFromApi(\"books/\", setBookList);\n    }, []);\n\n    return (\n        bookList.length > 0 ?\n        <Row xs={1} md={2} lg={3} style={{ width: '100%' }}>\n            {bookList.map((book, idx) => (\n                <Col\n                    key={idx}\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <BookCard data={book}/>\n                </Col>\n            ))}\n        </Row>\n        :\n        (\n            loggedIn ?\n            <div style={{textAlign: 'center'}}>No Books Available</div>\n            :\n            <div style={{textAlign: 'center'}}>Log in to see available books</div>\n        )\n    )\n}","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Card from 'react-bootstrap/Card';\n\nexport default function AreaCard({ data, onPage }) {\n  const areaObj = data;\n  const navigate = useNavigate();\n\n  return (\n    Object.keys(areaObj).length > 1 ?\n    <Card\n      style={{ width: '36rem', margin: 10 }}\n    >\n        <Card.Body style={{ minWidth: '60%', lineHeight: '2rem'}}>\n          <Card.Title>{areaObj.area_name}</Card.Title>\n          <Card.Text style={{ marginTop: '1rem' }}>{areaObj.area_description}</Card.Text>\n          Quality: <b>{areaObj.area_quality}</b> <br/>\n          {!onPage ?\n            <>\n              <Card.Link onClick={() => navigate(`/books/${areaObj.book}`)}>Guidebook</Card.Link><br/>\n            </>\n          : <></>}\n          <Card.Link onClick={() => navigate(`/areas/${areaObj.area_id}`)}>Features</Card.Link><br/>\n        </Card.Body>\n    </Card> : <>This Climb Does Not Exist</>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport AreaCard from '../Card/AreaCard';\n\nexport default function AreaList({ loggedIn, bookId, onPage }){\n    const [areaList, setAreaList] = useState([]);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        let path;\n        if(bookId){\n            path = `/books/${bookId}/areas/`\n        }\n        else if(id){\n            path = `/books/${id}/areas/`;\n        }\n        else{\n            path = `/areas/`;\n        }\n\n        fetchFromApi(path, setAreaList);\n    }, [id, bookId]);\n\n    return (\n        areaList.length > 0 ?\n        <Row xs={1} md={2} lg={3} style={{ width: '100%' }}>\n            {areaList.map((area, idx) => (\n                <Col\n                    key={idx}\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <AreaCard data={area} onPage={onPage}/>\n                </Col>\n            ))}\n        </Row>\n        :\n        (\n            loggedIn ?\n            <div style={{textAlign: 'center'}}>No Areas Available</div>\n            :\n            <div style={{textAlign: 'center'}}>Log in to see available areas</div>\n        )\n    )\n}","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Card from 'react-bootstrap/Card';\n\nexport default function Feature({ data, onPage }) {\n  const featureObj = data;\n  const navigate = useNavigate();\n\n  return (\n    Object.keys(featureObj).length > 1 ?\n    <Card\n      style={{ width: '36rem', margin: 10 }}\n      onClick={() => {\n        console.log(featureObj);\n      }}\n    >\n        <Card.Body style={{ minWidth: '60%', lineHeight: '2rem'}}>\n          <Card.Title>{featureObj.feature_name}</Card.Title>\n          <Card.Text style={{ marginTop: '1rem' }}>{featureObj.feature_description}</Card.Text>\n          Location: <b>{featureObj.location}</b> <br/>\n          GPS: <b>{featureObj.gps}</b> <br/>\n          {!onPage ? \n            <><Card.Link onClick={() => navigate(`/areas/${featureObj.area}`)}>Area</Card.Link><br/></>\n            :\n            <></>}\n          <Card.Link onClick={() => navigate(`/features/${featureObj.feature_id}`)}>Faces</Card.Link><br/>\n        </Card.Body>\n    </Card> : <>This Feature Does Not Exist</>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport FeatureCard from '../Card/FeatureCard';\n\nexport default function BookList({ loggedIn, areaId, onPage }){\n    const [featureList, setFeatureList] = useState([]);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        let path;\n        if(areaId){\n            path = `/areas/${areaId}/features`\n        }\n        else if (id){\n            path = `/areas/${id}/features`\n        }\n        else{\n            path = '/features/'\n        }\n\n        fetchFromApi(path, setFeatureList);\n    }, [id, areaId]);\n\n    return (\n        featureList.length > 0 ?\n        <Row xs={1} md={2} lg={3} style={{ width: '100%' }}>\n            {featureList.map((feature, idx) => (\n                <Col\n                    key={idx}\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <FeatureCard data={feature} onPage={onPage}/>\n                </Col>\n            ))}\n        </Row>\n        :\n        (\n            loggedIn ?\n            <div style={{textAlign: 'center'}}>No Features Available</div>\n            :\n            <div style={{textAlign: 'center'}}>Log in to see available features</div>\n        )\n    )\n}","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Card from 'react-bootstrap/Card';\n\nexport default function Feature({ data, onPage }) {\n  const faceObj = data;\n  const navigate = useNavigate();\n\n  return (\n    Object.keys(faceObj).length > 1 ?\n    <Card\n      style={{ width: '36rem', margin: 10 }}\n      onClick={() => {\n        console.log(faceObj);\n      }}\n    >\n        <Card.Body style={{ minWidth: '60%', lineHeight: '2rem'}}>\n          <Card.Title>{faceObj.face_name}</Card.Title>\n          <Card.Text style={{ marginTop: '1rem' }}>{faceObj.face_description}</Card.Text>\n          {!onPage ? <>\n            <Card.Link onClick={() => navigate(`/features/${faceObj.feature}`)}>Feature</Card.Link><br/>\n          </>\n          : <></>}\n          <Card.Link onClick={() => navigate(`/faces/${faceObj.face_id}`)}>Climbs</Card.Link><br/>\n        </Card.Body>\n    </Card> : <>This Climb Does Not Exist</>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport FaceCard from '../Card/FaceCard';\n\nexport default function BookList({ loggedIn, featureId, onPage }){\n    const [faceList, setFaceList] = useState([]);\n    const { id } = useParams();\n\n    useEffect(() => {\n        let path;\n        if(featureId){\n            path = `/features/${featureId}/faces`\n        }\n        else if(id){\n            path = `/features/${id}/faces`\n        }\n        else{\n            path = \"/faces\"\n        }\n\n        fetchFromApi(path, setFaceList);\n    }, [id, featureId]);\n\n    return (\n        faceList.length > 0 ?\n        <Row xs={1} md={2} lg={3} style={{ width: '100%' }}>\n            {faceList.map((face, idx) => (\n                <Col\n                    key={idx}\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <FaceCard onPage={onPage} data={face}/>\n                </Col>\n            ))}\n        </Row>\n        :\n        (\n            loggedIn ?\n            <div style={{textAlign: 'center'}}>No Faces Available</div>\n            :\n            <div style={{textAlign: 'center'}}>Log in to see available faces</div>\n        )\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util.js'\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport ClimbCard from '../Card/ClimbCard';\n\nexport default function ClimbList({ loggedIn, faceId, onPage }){\n    const [climbList, setClimbList] = useState([]);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        let path;\n        if(faceId){\n            path = `/faces/${faceId}/climbs`\n        }\n        else if(id){\n            path = `/faces/${id}/climbs`\n        }\n        else{\n            path = 'climbs'\n        }\n\n        fetchFromApi(path, setClimbList);\n    }, [id, faceId]);\n\n    return (\n        climbList.length > 0 ?\n        <Row xs={1} md={2} lg={3} style={{ width: '100%' }}>\n            {climbList.map((climb, idx) => (\n                <Col\n                    key={idx}\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <ClimbCard onPage={onPage} data={climb}/>\n                </Col>\n            ))}\n        </Row>\n        :\n        (\n            loggedIn ?\n            <div style={{textAlign: 'center'}}>No Climbs Available</div>\n            :\n            <div style={{textAlign: 'center'}}>Log in to see available climbs</div>\n        )\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getAuth, apiUrlBase } from '../../util';\n\nimport AreaList from '../List/AreaList';\n\nconst defaultBookObj = {\n    book_name: \"\",\n    book_description: \"\"\n}\n\nconst defaultAuthorObj = {\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\"\n}\n\nconst fetchAuthor = (author_id, setAuthorObj, headers) => {\n    fetch(`${apiUrlBase}/users/${author_id}`, {\n        method: 'GET',\n        headers: headers\n    })\n    .then(res => res.json())\n    .then(data => setAuthorObj(data))\n    .catch(e => console.log(e));\n}\n\nexport default function BookPage({ loggedIn }){\n    const { id } = useParams();\n    const [bookObj, setBookObj] = useState(defaultBookObj);\n    const [authorObj, setAuthorObj] = useState(defaultAuthorObj);\n\n    useEffect(() => {\n        // cant be done with fetchFromApi because of the fetchAuthor call in the last `then`\n        const token = getAuth();\n        const headers = token ? {\n            \"Authorization\": `Token ${token}`\n        } : {};\n\n        fetch(`${apiUrlBase}/books/${id}`, {\n            method: 'GET',\n            headers: headers\n        })\n        .then(res => res.json())\n        .then(data => {\n            setBookObj(data)\n            fetchAuthor(data.author, setAuthorObj, headers);\n        })\n        .catch(e => console.log(e));\n    }, [id])\n\n    return (\n        <div style={{ height: '100%' }}>\n            <div style={{ textAlign: 'center' }}>\n                <h1>{bookObj.book_name}</h1><br/>\n                <h4>by {authorObj.first_name} {authorObj.last_name}</h4><br/>\n                {bookObj.book_description}\n            </div>\n            <AreaList bookId={id} loggedIn={loggedIn} onPage={true}/>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport FeatureList from '../List/FeatureList';\n\nconst defaultAreaObj = {\n    area_name: \"\",\n    area_description: \"\",\n    book: \"\"\n}\n\nexport default function BookPage({ loggedIn }){\n    const { id } = useParams();\n    const [areaObj, setAreaObj] = useState(defaultAreaObj);\n\n    useEffect(() => {\n        fetchFromApi(`/areas/${id}`, setAreaObj);\n    }, [id])\n\n    return (\n        <div style={{ height: '100%' }}>\n            <div style={{ textAlign: 'center' }}>\n                <h1>{areaObj.area_name}</h1><br/>\n                {areaObj.area_description} <br/>\n                <Link to={`/books/${areaObj.book}`}>Guidebook</Link>\n            </div>\n            <FeatureList areaId={id} loggedIn={loggedIn} onPage={true}/>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport FaceList from '../List/FaceList';\n\nconst defaultFeatureObj = {\n    feature_name: \"\",\n    feature_description: \"\"\n}\n\nexport default function BookPage({ loggedIn }){\n    const { id } = useParams();\n    const [featureObj, setFeatureObj] = useState(defaultFeatureObj);\n\n    useEffect(() => {\n        fetchFromApi(`/features/${id}`, setFeatureObj)\n    }, [id])\n\n    return (\n        <div style={{ height: '100%' }}>\n            <div style={{ textAlign: 'center' }}>\n                <h1>{featureObj.feature_name}</h1><br/>\n                {featureObj.feature_description}<br/>\n                <Link to={`/areas/${featureObj.area}`}>Area</Link>\n            </div>\n            <FaceList featureId={id} loggedIn={loggedIn} onPage={true}/>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nimport { fetchFromApi } from '../../util';\n\nimport ClimbList from '../List/ClimbList';\n\nconst defaultFaceObj = {\n    face_name: \"\",\n    face_description: \"\"\n}\n\nexport default function BookPage({ loggedIn }){\n    const { id } = useParams();\n    const [faceObj, setFaceObj] = useState(defaultFaceObj);\n\n    useEffect(() => {\n        fetchFromApi(`/faces/${id}`, setFaceObj);\n    }, [id])\n\n    return (\n        <div style={{ height: '100%' }}>\n            <div style={{ textAlign: 'center' }}>\n                <h1>{faceObj.face_name}</h1><br/>\n                {faceObj.face_description}<br/>\n                <Link to={`/features/${faceObj.feature}`}>Feature</Link>\n            </div>\n            <ClimbList faceId={id} loggedIn={loggedIn} onPage={true}/>\n        </div>\n    )\n}","import { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport EditPortal from './components/EditPortal';\nimport Layout from './components/Layout';\nimport NotFound from './components/NotFound';\n\n// lists\nimport BookList from './components/List/BookList';\nimport AreaList from './components/List/AreaList';\nimport FeatureList from './components/List/FeatureList';\nimport FaceList from './components/List/FaceList';\nimport ClimbList from './components/List/ClimbList';\n\n// pages\nimport BookPage from './components/Page/BookPage';\nimport AreaPage from './components/Page/AreaPage';\nimport FeaturePage from './components/Page/FeaturePage';\nimport FacePage from './components/Page/FacePage';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState();\n\n  useEffect(() => {\n    setLoggedIn(Object.keys(sessionStorage).indexOf(\"auth_token\") >= 0 || Object.keys(localStorage).indexOf(\"auth_token\") >= 0);\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Layout loggedIn={loggedIn} setLoggedIn={setLoggedIn}>\n        <Routes>\n          <Route exact path=\"/\" element={<Home loggedIn={loggedIn}/>}/>\n\n          <Route exact path=\"/books\" element={<BookList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/areas\" element={<AreaList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/features\" element={<FeatureList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/faces\" element={<FaceList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/climbs\" element={<ClimbList loggedIn={loggedIn}/>}/>\n\n          <Route exact path=\"/books/:id\" element={<BookPage loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/areas/:id\" element={<AreaPage loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/features/:id\" element={<FeaturePage loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/faces/:id\" element={<FacePage loggedIn={loggedIn}/>}/>\n\n          <Route exact path=\"/books/:id/areas\" element={<AreaList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/areas/:id/features\" element={<FeatureList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/features/:id/faces\" element={<FaceList loggedIn={loggedIn}/>}/>\n          <Route exact path=\"/faces/:id/climbs\" element={<ClimbList loggedIn={loggedIn}/>}/>\n\n          <Route exact path=\"/signup\" element={<SignUp loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>}/>\n          <Route exact path=\"/login\" element={<Login loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>}/>\n          <Route exact path=\"/create\" element={<EditPortal/>}/>\n\n          <Route exact path=\"*\" element={<NotFound/>}/>\n        </Routes>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}